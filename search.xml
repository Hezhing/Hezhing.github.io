<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[机器学习（一）：KNN算法的实现]]></title>
    <url>%2F2018%2F07%2F30%2F%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9AKNN%E7%AE%97%E6%B3%95%E7%9A%84%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[##描述百度百科 ##算法实现原理： 1.计算已知类别数据集中的点与当前点之间的距离; 2.按照距离递增次序排序； 3.选取与当前点距离最小的k个点； 4.确定前k个点所在类别的出现频率； 5.返回前k个点所出现频率最高的类别作为当前点的预测分类。 ##算法实现： ###数据集的建立及python代码的实现：123456789import numpy as npfrom numpy import *import operator#训练集def creatDataSet(): group = array([[1.0,1.1],[1.0,1.0],[0,0],[0,0.1]]) labels = [&apos;A&apos;,&apos;A&apos;,&apos;B&apos;,&apos;B&apos;] return group, labels ####运行结果： 如下图： ###KNN算法的实现：12345678910111213141516171819202122232425262728293031#KNN分类# inX 用于分类的数据（即测试集）# dataSet 用于训练的数据（即测试集）# labels 分类的标签# k KNN算法中 K 的值def classify(inX,dataSet,labels,k): #计算距离 dataSetSize = dataSet.shape[0] #返回dataSet的行数 diffMat = np.tile(inX, (dataSetSize,1)) - dataSet #inX 在（行向量方向上重复，列向量方向上重复）次数 sqDiffMat = diffMat**2 #二维特征相减后平方 sqDistances = sqDiffMat.sum(axis=1) #相减平方再相加 distances = sqDistances**0.5 #再开方 #排序（从小到大） sortedDistIndices = distances.argsort() #排序并返回下标 classCount = &#123;&#125; #定义一个记录类别次数的字典 for i in range(k): voteIlabel = labels[sortedDistIndices[i]] #取出前K个元素的类别 classCount[voteIlabel] = classCount.get(voteIlabel,0) + 1 #计算类别的次数# key=operator.itemgetter(1)根据字典的值进行排序# key=operator.itemgetter(0)根据字典的键进行排序# reverse降序排序字典 sortedClassCount = sorted(classCount.items(),key=operator.itemgetter(1),reverse=True) # 降序排序 return sortedClassCount[0][0] ####测试结果：]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Counterfeit Dollar(枚举)]]></title>
    <url>%2F2018%2F07%2F07%2FCounterfeit-Dollar-%E6%9E%9A%E4%B8%BE%2F</url>
    <content type="text"><![CDATA[描述传送门 Sally Jones has a dozen Voyageur silver dollars. However, only eleven of the coins are true silver dollars; one coin is counterfeit even though its color and size make it indistinguishable from the real silver dollars. The counterfeit coin has a different weight from the other coins but Sally does not know if it is heavier or lighter than the real coins.Happily, Sally has a friend who loans her a very accurate balance scale. The friend will permit Sally three weighings to find the counterfeit coin. For instance, if Sally weighs two coins against each other and the scales balance then she knows these two coins are true. Now if Sally weighsone of the true coins against a third coin and the scales do not balance then Sally knows the third coin is counterfeit and she can tell whether it is light or heavy depending on whether the balance on which it is placed goes up or down, respectively.By choosing her weighings carefully, Sally is able to ensure that she will find the counterfeit coin with exactly three weighings. input The first line of input is an integer n (n &gt; 0) specifying the number of cases to follow. Each case consists of three lines of input, one for each weighing. Sally has identified each of the coins with the letters A–L. Information on a weighing will be given by two strings of letters and then one of the words “up”, “down”, or “even”. The first string of letters will represent the coins on the left balance; the second string, the coins on the right balance. (Sally will always place the same number of coins on the right balance as on the left balance.) The word in the third position will tell whether the right side of the balance goes up, down, or remains even. output For each case, the output will identify the counterfeit coin by its letter and tell whether it is heavy or light. The solution will always be uniquely determined. 样例12345678910input:1 ABCD EFGH even ABCI EFJK up ABIJ EFGH even output:K is the counterfeit coin and it is light. 题意理解+思路题意理解 题意说一共有12个硬币，其中有一个是假币，不知道是重还是轻，一共可以称量3次来寻找假币。输入第一行是n（n&gt;0），指需要测试的案例数。每个案例由3行输入，用A-L来表示硬币。第一串字母代表天平左边，第二串代表天平右边，第三串字母由 even up down 来分别表示保持平衡、天平右侧上升、天平右侧下降。要求找出假币所代表的的字母并告知是重还是轻。 思路 开12个数组代表A-L，并赋初值为0，若天平平衡，则将左右的所有字母对应的数组都赋值为一个固定的数，若不平衡，则首先除去固定数的数组（数字固定，表示是真币）然后将重的一侧加一，轻的一侧减一。最后遍历数组寻找出绝对值最大的数就是假币，因为这个数字是被怀疑次数最多的。如果除去绝对值为正，则为重，否则为轻。 AC代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566#include&lt;stdio.h&gt;#include&lt;string.h&gt;#include&lt;math.h&gt; int main()&#123; int n,k,i,t,len,max; char s1[13],s2[13],temp[10]; int a[12]; scanf(&quot;%d&quot;,&amp;n); while(n--) &#123; memset(a,0,sizeof(a)); for(t=0;t&lt;3;t++) &#123; scanf(&quot;%s%s%s&quot;,s1,s2,temp); len=strlen(s1); //两边个数肯定相等，所以两边长度也一样,不能只看样例便觉得一定是4而忽略这一步，否则会 WA if(strcmp(temp,&quot;even&quot;)==0) &#123; for(i=0;i&lt;len;++i) &#123; a[s1[i]-&apos;A&apos;]=10; //说明两边都为真，将标记数组置为10（10为自己设置的固定的数，但不能过小否则会错。） a[s2[i]-&apos;A&apos;]=10; &#125; &#125; else if(strcmp(temp,&quot;up&quot;)==0)//说明左边重 &#123; for(i=0;i&lt;len;++i) &#123; if(a[s1[i]-&apos;A&apos;]!=10) ++a[s1[i]-&apos;A&apos;]; //左边加一 if(a[s2[i]-&apos;A&apos;]!=10) --a[s2[i]-&apos;A&apos;]; //右边减一 &#125; &#125; else &#123; for(i=0;i&lt;len;++i) //说明右边重 &#123; if(a[s1[i]-&apos;A&apos;]!=10) --a[s1[i]-&apos;A&apos;]; //左边减一 if(a[s2[i]-&apos;A&apos;]!=10) ++a[s2[i]-&apos;A&apos;]; //右边加一 &#125; &#125; &#125; max=0; k=0; for(i=0;i&lt;12;++i) &#123; if(a[i]==10) continue; if(max&lt;=abs(a[i])) &#123; max=abs(a[i]); k=i; &#125; &#125; if(a[k]&gt;0) //去绝对值后的符号决定轻重。 printf(&quot;%c is the counterfeit coin and it is heavy.\n&quot;,&apos;A&apos;+k); else printf(&quot;%c is the counterfeit coin and it is light.\n&quot;,&apos;A&apos;+k); &#125; return 0; &#125;]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>枚举</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在我搭建博客中所遇到的坑]]></title>
    <url>%2F2018%2F07%2F02%2F%E5%9C%A8%E6%88%91%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%89%80%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91%2F</url>
    <content type="text"><![CDATA[遇到的第一个坑hexo不显示 在安装hexo的过程中输入 hexo -v 查看hexo安装版本的时候，没有显示hexo的版本。 安装完毕后，理应显示的图为： 然而我的显示图为： 解决办法： 原理：因为需要git bash到你所创建的子文件中，而不是上一层文件中，在上一层文件中不会显示你所安装过的hexo的版本。 遇到的第二个坑背景虚化 在我搭建博客过程中，发现背景要么极暗要么极白，很难调节，加上什么背景图片都很难看清字体。起初我想要更改字体的颜色来弥补，后来发现情况不止如此，问了大佬以后才知道可以去更改一下背景，百度半天虚化背景发现这个背景，没什么进展，问了一个前端大佬，才修改完毕，具体如下:博客根目录 themes\next\source\css_custom这个文件下的custom.styl文件中修改如下：。 嗯~其他坑还在踩，欢迎投稿。。]]></content>
      <categories>
        <category>-解决问题</category>
      </categories>
      <tags>
        <tag>-问题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Happy Birthday]]></title>
    <url>%2F2018%2F06%2F27%2FHappy-Birthday%2F</url>
    <content type="text"><![CDATA[记陪你的第一次生日2017年6月。 回想起高三那年结束前，你我是同桌，你跟我说快过生日了，但却是高考以后。我就想提前送你一些礼物，无他，只因为你是我同桌。 2017年7月。 后来发生了一些很奇妙的事，渐渐的越来越熟，也就是越来越熟。那年六月，一起高考，那年七月，各奔东西。 2017年8月。 一些事就是缘分问题，也确实是很难的。抉择问题。反正是一起来四川了。挺好的。这个月记得的好像是开学。嗯，对，就是开学。 2017年9月。 这个月印象还是蛮不错的，去了一次成都，第一次去呐，还算可以，问了路程，问了方向，问了倒转车，说走就走了。。 2017年10月。 十月一开学，放假7天，没在学校，去成都浪了。见了三年不见的好友，一起大概的走了成都。反正哪里挤去了哪里，反正缘分这东西，说不清楚。 2017年11月。 这个月没什么太大的波浪，仍然保持着一个月或者两周去看一次的习惯。过的波澜不惊。除了复习备考，好像还有美食节？ 2017年12月。 这个月还凑合，月初啊，月末啊啥的你就过来了，只是来的好像不是时候，完美错过了东八舞池和元旦晚会呐，真是有点遗憾。 2018年1月。 主要在准备考试和考完试的颓废中生活。还行吧，就这样，不过还发现了美食，等着带你来吃。17号回去，一起坐高铁。真是不错。 2018年2月。 这个月就是在家嘛，打游戏多了，你还是挺生气的。14号那天，之前，做了个小视频，送给你了，也就是个小视频呐。凑合。。地址的话，在空间吧。 2018年3月。 开学的日子，去接你，结果你手机被偷了，虽然事情解决了，可是还是心有余悸呐。以后还是要万分小心。不过月底你还是过来陪我耍了两天。开森。 2018年4月。 清明节的时候过去了，我还真的错不过每次的放假呐。一有时间就还是会去，或许就是单纯想去吧。这个月好像实现了半天来回成都？？ 2018年5月。 劳动节的时候去了，也很快就回来了，前一两天，还在学校转悠，第三天还是去了。去了之前没去的地方，还好天气不错。 2018年6月。 因为端午节要考试呐，这个月还是复习备考的一个月，儿童节还是忍住了没去，因为第二天考试。。也在这个月吧，迎来了你的生日呐，还是选择去吧，无他，因为你是我女朋友。 2018年。。。 故事还在继续，那句话咋说来着，我有故事，你有酒吗？]]></content>
      <categories>
        <category>-杂记</category>
      </categories>
      <tags>
        <tag>-生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F06%2F21%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
